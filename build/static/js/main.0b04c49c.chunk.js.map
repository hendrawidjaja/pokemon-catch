{"version":3,"sources":["Reducers/pokemonReducer.jsx","Reducers/listReducer.jsx","contexts/PokemonContext.jsx","styles/globalStyle.jsx","components/PokemonCollection/style.jsx","assets/IconPack.jsx","components/PokemonCollection/PokemonCollection.jsx","styles/button.jsx","components/PokemonForm/style.jsx","components/PokemonForm/index.jsx","components/PokemonDetailsPage/style.jsx","components/PokemonDetailsPage/index.jsx","components/PokemonListPage/style.jsx","components/PokemonListPage/index.jsx","components/PokemonQuerying/index.jsx","App.js","serviceWorker.js","index.js"],"names":["REDUCERCONSTANT","pokemonReducer","state","action","type","name","payload","data","img","id","uuidv4","filter","pokemon","Error","LISTACTION","initialListState","image","isLoadingList","isLoadingPokemonDetail","limit","offset","pokemonDetails","showDetail","showCollection","pokemonList","listReducer","isLoading","pokemons","PokemonContext","createContext","ListContext","PokemonContextProvider","props","useReducer","listState","dispatchList","localdata","localStorage","getItem","JSON","parse","dispatch","useEffect","setItem","stringify","Provider","value","children","GCOLOR","GSPACER","GFONT","mq","map","Container","styled","div","WrapperTitle","WrapperButtons","Title","p","center","CardList","ul","Card","li","Name","smaller","SmallNote","IconCollection","xmlns","fill","viewBox","width","height","d","IconX","IconBack","PokemonCollection","RELEASE_POKEMON","useContext","className","length","onClick","item","key","src","alt","BaseButton","button","disabled","Button","ButtonClear","Form","form","Input","input","WrapperInput","ADD_POKEMON","PokemonForm","done","useState","setName","listener","event","code","preventDefault","document","addEventListener","removeEventListener","onSubmit","e","onChange","target","placeholder","required","DetailPage","WrapperImg","Img","ULAbilities","ULMoves","ULTypes","Li","DetailPageButton","Dice","Lucky","PokemonSecure","PokemonDetailsPage","limitMoves","nameGiven","setNameGiven","success","setSuccess","showMessage","setShowMessage","showBeforeForm","setShowBeforeForm","handleBtnBack","win","abilities","ability","moves","move","types","index","prev","Math","random","toFixed","setTimeout","WrapperButtonCollection","ContainerCards","ListCards","CardItem","P","WrapperButton","WrapperLoadingScreen","LoadingText","PokemonListPage","pokemonName","setPokemonName","result","setResult","setPokemonDetails","fetch","credentials","headers","body","query","variables","method","then","res","json","results","handleClickPokemon","GlobalStyles","css","App","styles","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0b04c49c.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\n\nexport const REDUCERCONSTANT = {\n  ADD_POKEMON: \"ADD POKEMON\",\n  RELEASE_POKEMON: \"RELEASE POKEMON\",\n  FETCH_POKEMON: \"FETCH POKEMON\",\n};\n\nconst pokemonReducer = (state, action) => {\n  switch (action.type) {\n    case REDUCERCONSTANT.ADD_POKEMON: {\n      return [\n        ...state,\n        {\n          name: action.payload.name,\n          data: action.payload.data,\n          img: action.payload.img,\n          id: uuidv4(),\n        },\n      ];\n    }\n\n    case REDUCERCONSTANT.RELEASE_POKEMON: {\n      return state.filter((pokemon) => pokemon.id !== action.payload.id);\n    }\n\n    default:\n      throw Error(\"Unknown action\");\n  }\n};\n\nexport default pokemonReducer;\n","export const LISTACTION = {\n  CLOSE: \"CLOSE\",\n  FETCH_DONE: \"FETCH DONE\",\n  FETCH_LIST: \"FETCH LIST\",\n  FETCH_POKEMON: \"FETCH POKEMON\",\n  RAISE_OFFSET: \"RAISE OFFSET\",\n  REDUCE_OFFSET: \"REDUCE OFFSET\",\n  TOGGLE_COLLECTION: \"TOGGLE COLLECTION\",\n};\n\nexport const initialListState = {\n  image: \"\",\n  isLoadingList: false,\n  isLoadingPokemonDetail: false,\n  limit: 20,\n  name: \"ditto\",\n  offset: 1,\n  pokemonDetails: \"\",\n  showDetail: false,\n  showCollection: false,\n  pokemonList: [],\n};\n\nconst listReducer = (state, action) => {\n  switch (action.type) {\n    case LISTACTION.CLOSE: {\n      return {\n        ...state,\n        showDetail: false,\n      };\n    }\n\n    case LISTACTION.FETCH_DONE: {\n      return {\n        ...state,\n        isLoading: false,\n        showDetail: true,\n      };\n    }\n\n    case LISTACTION.FETCH_LIST: {\n      return {\n        ...state,\n        pokemonList: action.payload.pokemonList.pokemons,\n      };\n    }\n\n    case LISTACTION.FETCH_POKEMON: {\n      return {\n        ...state,\n        isLoading: true,\n        image: action.payload.image,\n        name: action.payload.name,\n      };\n    }\n\n    case LISTACTION.RAISE_OFFSET: {\n      return {\n        ...state,\n        offset: (state.offset += 20),\n      };\n    }\n\n    case LISTACTION.REDUCE_OFFSET: {\n      return {\n        ...state,\n        offset: state.offset <= 1 ? state.offset : (state.offset -= 20),\n      };\n    }\n\n    case LISTACTION.TOGGLE_COLLECTION: {\n      return {\n        ...state,\n        showCollection: !state.showCollection,\n      };\n    }\n\n    default:\n      throw Error(\"Unknown action\");\n  }\n};\n\nexport default listReducer;\n","import React, { createContext, useReducer, useEffect } from \"react\";\nimport pokemonReducer from \"../Reducers/pokemonReducer.jsx\";\nimport listReducer, { initialListState } from \"../Reducers/listReducer.jsx\";\n\nexport const PokemonContext = createContext();\nexport const ListContext = createContext();\n\nconst PokemonContextProvider = (props) => {\n  const [listState, dispatchList] = useReducer(listReducer, initialListState);\n\n  const [pokemons, dispatch] = useReducer(pokemonReducer, [], () => {\n    const localdata = localStorage.getItem(\"pokemons\");\n    return localdata ? JSON.parse(localdata) : [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\"pokemons\", JSON.stringify(pokemons));\n  }, [pokemons]);\n\n  return (\n    <PokemonContext.Provider value={{ pokemons, dispatch }}>\n      <ListContext.Provider value={{ listState, dispatchList }}>\n        {props.children}\n      </ListContext.Provider>\n    </PokemonContext.Provider>\n  );\n};\n\nexport default PokemonContextProvider;\n","export const GCOLOR = {\n  PRIMARY: \"#333335\",\n  SECONDARY: \"#888888\",\n  TERTIER: \"#dcdcdc\",\n  GRAY: \"hsl(0, 0%, 7%)\",\n  GRAY24: \"hsl(0, 0%, 66.6%)\",\n  BEIGE: \"#D9CAB3\",\n  BLUEISH: \"#b3c2d9\",\n};\n\n/* Media Queries    0    1    2    3    4 */\nexport const GMQ = [320, 414, 768, 992, 1200];\n\nexport const GSPACER = {\n  GUTTER: [\"0.75rem\", \"0.95rem\", \"1rem\", \"1.2rem\", \"1.4rem\"],\n};\n\nexport const GFONT = {\n  SIZE: [\n    \"calc(0.40em  + 0.50vw)\" /* 0 */,\n    \"calc(0.50em  + 0.60vw)\",\n    \"calc(0.65em  + 0.70vw)\" /* 2 */,\n    \"calc(0.80em  + 0.80vw)\",\n    \"calc(0.90em  + 0.90vw)\",\n    \"calc(1.20em  + 1.00vw)\",\n    \"calc(1.40em  + 1.20vw)\",\n    \"calc(1.60em  + 1.40vw)\",\n  ],\n};\n\nexport const mq = GMQ.map((mq) => `@media (min-width: ${mq}px)`);\n","import styled from \"@emotion/styled\";\nimport { GCOLOR, GFONT, mq } from \"../../styles/globalStyle\";\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n\n  ${mq[3]} {\n    margin: 0 auto;\n    max-width: var(--screen-max-width);\n  }\n`;\n\nexport const WrapperTitle = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 1.5em;\n  padding-top: 1.5rem;\n  flex-direction: column;\n`;\n\nexport const WrapperButtons = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 1rem;\n  padding-top: 1rem;\n  position: relative;\n  width: 100%;\n\n  span {\n    cursor: pointer;\n  }\n`;\n\nexport const Title = styled.p`\n  align-items: center;\n  display: flex;\n  font-size: ${GFONT.SIZE[7]};\n  height: ${(props) => props.center && `calc(100vh - 5.75rem)`};\n  justify-content: ${(props) => props.center && `center`};\n  width: 100%;\n\n  ${mq[3]} {\n    max-width: var(--screen-max-width);\n  }\n`;\n\nexport const CardList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 5rem);\n  column-gap: 1.5rem;\n  position: relative;\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n\n  ${mq[3]} {\n    column-gap: 2rem;\n  }\n`;\n\nexport const Card = styled.li`\n  cursor: pointer;\n`;\n\nexport const Name = styled.p`\n  color: ${GCOLOR.TERTIER};\n  font-size: ${GFONT.SIZE[3]};\n  font-weight: 600;\n  grid-area: name;\n  letter-spacing: 0.5px;\n  text-align: center;\n  width: 100%;\n\n  font-size: ${(props) =>\n    props.smaller ? `${GFONT.SIZE[1]}` : `${GFONT.SIZE[3]}`};\n`;\n\nexport const SmallNote = styled.p`\n  font-size: ${GFONT.SIZE[2]};\n  font-style: italic;\n  width: 100%;\n\n  ${mq[3]} {\n    font-size: ${GFONT.SIZE[1]};\n  }\n`;\n","import React from \"react\";\nimport { GCOLOR } from \"../styles/globalStyle\";\n\nconst IconCollection = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"#000000\"\n      viewBox=\"0 0 24 24\"\n      width=\"24px\"\n      height=\"24px\"\n    >\n      <path\n        fill={`${GCOLOR.TERTIER}`}\n        d=\"M 6.0097656 2 C 4.9143111 2 4.0097656 2.9025988 4.0097656 3.9980469 L 4 22 L 12 19 L 20 22 L 20 20.556641 L 20 4 C 20 2.9069372 19.093063 2 18 2 L 6.0097656 2 z M 6.0097656 4 L 18 4 L 18 19.113281 L 12 16.863281 L 6.0019531 19.113281 L 6.0097656 4 z\"\n      />\n    </svg>\n  );\n};\n\nconst IconX = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={`${GCOLOR.TERTIER}`}\n        d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm6 16.538l-4.592-4.548 4.546-4.587-1.416-1.403-4.545 4.589-4.588-4.543-1.405 1.405 4.593 4.552-4.547 4.592 1.405 1.405 4.555-4.596 4.591 4.55 1.403-1.416z\"\n      />\n    </svg>\n  );\n};\n\nconst IconBack = () => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M20.7719 10.7719C21.4502 10.7719 22 11.3218 22 12C22 12.6782 21.4502 13.2281 20.7719 13.2281H6.79532L12.8827 19.3666C13.3647 19.8527 13.3631 20.6369 12.879 21.121C12.3936 21.6064 11.6064 21.6064 11.121 21.121L2.74906 12.7491C2.33537 12.3354 2.33537 11.6646 2.74906 11.2509L11.121 2.87903C11.6064 2.39355 12.3936 2.39355 12.879 2.87903C13.3631 3.36307 13.3647 4.14734 12.8827 4.6334L6.79532 10.7719H20.7719Z\"\n        fill=\"#dcdcdc\"\n      />\n    </svg>\n  );\n};\n\nexport { IconCollection, IconX, IconBack };\n","import React, { useContext } from \"react\";\nimport { ListContext, PokemonContext } from \"../../contexts/PokemonContext\";\n\nimport { REDUCERCONSTANT } from \"../../Reducers/pokemonReducer\";\nimport { LISTACTION } from \"../../Reducers/listReducer\";\n\nimport {\n  Card,\n  CardList,\n  Container,\n  Name,\n  Title,\n  WrapperTitle,\n  SmallNote,\n  WrapperButtons,\n} from \"./style\";\n\nimport { IconBack } from \"../../assets/IconPack\";\n\nconst PokemonCollection = () => {\n  const { RELEASE_POKEMON } = REDUCERCONSTANT;\n  const { pokemons, dispatch } = useContext(PokemonContext);\n  const { dispatchList } = useContext(ListContext);\n\n  const releasePokemon = (id) => {\n    dispatch({ type: RELEASE_POKEMON, payload: { id } });\n  };\n\n  const handleClickCollection = () => {\n    dispatchList({ type: LISTACTION.TOGGLE_COLLECTION });\n  };\n\n  return (\n    <Container className=\"container\">\n      {pokemons.length > 0 ? (\n        <WrapperTitle className=\"wrapper-title\">\n          <Title className=\"title\">List of your collection</Title>\n          <SmallNote>Click to remove</SmallNote>\n        </WrapperTitle>\n      ) : (\n        <>\n          <WrapperButtons className=\"wrapper-buttons\">\n            <span className=\"btn-back\" onClick={() => handleClickCollection()}>\n              <IconBack />\n            </span>\n          </WrapperButtons>\n\n          <Title center className=\"title\">\n            You don't have any collection\n          </Title>\n        </>\n      )}\n\n      {pokemons.length > 0 && (\n        <CardList>\n          {pokemons.map((item) => (\n            <Card\n              key={item.id}\n              className=\"card\"\n              onClick={() => releasePokemon(item.id)}\n            >\n              <Name className=\"name\">{item.name}</Name>\n              <img className=\"img\" src={item.img} alt=\"img\" />\n              <Name smaller className=\"original-name\">\n                {item.data.name}\n              </Name>\n            </Card>\n          ))}\n        </CardList>\n      )}\n    </Container>\n  );\n};\n\nexport default PokemonCollection;\n","import styled from \"@emotion/styled\";\nimport { GCOLOR, GFONT, mq } from \"./globalStyle\";\n\nexport const BaseButton = styled.button`\n  align-items: center;\n  border-radius: calc(0.25em + 0.3vw);\n  cursor: ${(props) => (props.disabled ? \"default\" : \"pointer\")};\n  display: flex;\n  justify-content: center;\n  opacity: ${(props) => (props.disabled ? \"0.3\" : \"1\")};\n  position: relative;\n`;\n\nexport const Button = styled(BaseButton)`\n  background-color: ${GCOLOR.SECONDARY};\n  border: 1px solid ${GCOLOR.TERTIER};\n  color: ${GCOLOR.TERTIER};\n  padding-bottom: 0.6rem;\n  padding-top: 0.6rem;\n\n  span {\n    font-size: ${GFONT.SIZE[2]};\n  }\n\n  ${mq[3]} {\n    max-width: 220px;\n\n    span {\n      font-size: ${GFONT.SIZE[2]};\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport { GCOLOR, GFONT, GSPACER, mq } from \"../../styles/globalStyle\";\n\nexport const ButtonClear = styled.button`\n  background-color: transparent;\n  cursor: pointer;\n  display: flex;\n  position: absolute;\n  right: 0.5rem;\n  top: 50%;\n  transform: translateY(-50%) scale(0.625);\n\n  ${mq[3]} {\n    transform: translateY(-50%) scale(0.85);\n  }\n`;\n\nexport const Form = styled.form`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  padding-top: 1.25rem;\n  column-gap: 0.5rem;\n  position: relative;\n\n  ${mq[3]} {\n    padding-top: 1.5rem;\n  }\n`;\n\nexport const Input = styled.input`\n  background-color: ${GCOLOR.SECONDARY};\n  border-radius: calc(0.25em + 0.15vw);\n  border: 1px solid ${GCOLOR.TERTIER};\n  color: ${GCOLOR.TERTIER};\n  font-size: ${GFONT.SIZE[2]};\n  padding-bottom: 0.8rem;\n  padding-top: 0.8rem;\n  width: 100%;\n\n  &::placeholder {\n    color: ${GCOLOR.GRAY24};\n    opacity: 1; /* Firefox */\n  }\n\n  ${mq[0]} {\n    padding-left: ${GSPACER.GUTTER[0]};\n    padding-right: 2.25rem;\n  }\n\n  ${mq[3]} {\n    padding-left: ${GSPACER.GUTTER[3]};\n    padding-right: 2.5rem;\n  }\n`;\n\nexport const WrapperInput = styled.div`\n  position: relative;\n`;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { PokemonContext } from \"../../contexts/PokemonContext\";\nimport { REDUCERCONSTANT } from \"../../Reducers/pokemonReducer\";\n\nimport { IconX } from \"../../assets/IconPack\";\nimport { Button } from \"../../styles/button\";\nimport { ButtonClear, Form, Input, WrapperInput } from \"./style\";\n\nconst { ADD_POKEMON } = REDUCERCONSTANT;\n\nconst PokemonForm = ({ done, data, img }) => {\n  const { dispatch } = useContext(PokemonContext);\n  const [name, setName] = useState(\"\");\n\n  useEffect(() => {\n    const listener = (event) => {\n      if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n        if (name !== \"\") {\n          dispatch({ type: ADD_POKEMON, payload: { name, data, img } });\n          setName(\"\");\n          done();\n          event.preventDefault();\n        }\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  }, [data, dispatch, img, name, done]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch({ type: ADD_POKEMON, payload: { name, data, img } });\n    done();\n    setName(\"\");\n  };\n\n  return (\n    <Form className=\"form\" onSubmit={handleSubmit}>\n      <WrapperInput className=\"wrapper-input\">\n        <Input\n          className=\"input-pokemon-name\"\n          onChange={(e) => setName(e.target.value)}\n          placeholder=\"Named your Pokemon\"\n          required\n          type=\"text\"\n          value={name}\n        />\n\n        {name && (\n          <ButtonClear onClick={() => setName(\"\")} className=\"wrapper-icon\">\n            <IconX />\n          </ButtonClear>\n        )}\n      </WrapperInput>\n\n      <Button className=\"btn-form\" type=\"submit\">\n        <span>Submit</span>\n      </Button>\n    </Form>\n  );\n};\n\nexport default PokemonForm;\n","import styled from \"@emotion/styled\";\nimport { BaseButton } from \"../../styles/button\";\nimport { GCOLOR, GFONT, GSPACER, mq } from \"../../styles/globalStyle\";\n\nexport const DetailPage = styled.div`\n  bottom: 0;\n  left: 0;\n  min-height: 100vh;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: ${GSPACER.GUTTER[0]};\n  padding-right: ${GSPACER.GUTTER[0]};\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 100%;\n  z-index: 1;\n\n  ${mq[1]} {\n    padding-left: ${GSPACER.GUTTER[1]};\n    padding-right: ${GSPACER.GUTTER[1]};\n    width: 85%;\n  }\n\n  ${mq[2]} {\n    padding-left: ${GSPACER.GUTTER[2]};\n    padding-right: ${GSPACER.GUTTER[2]};\n    width: 45%;\n  }\n`;\n\nexport const WrapperButtons = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 1rem;\n  padding-top: 1rem;\n  position: relative;\n  width: 100%;\n\n  span {\n    cursor: pointer;\n  }\n`;\n\nexport const Container = styled.div`\n  border-radius: 0.8rem;\n  border: 1px solid ${GCOLOR.BEIGE};\n  display: grid;\n  padding: 0.5rem 0;\n  row-gap: 0.5rem;\n  user-select: none;\n  grid-template-areas:\n    \". name name name .\"\n    \". image image image .\"\n    \". moves . abilities .\"\n    \". moves . types .\"\n    \". smallNote . . .\";\n\n  ${mq[3]} {\n    padding: 0.5rem 0.5rem;\n    row-gap: 0.8rem;\n  }\n`;\n\nexport const Name = styled.p`\n  color: ${GCOLOR.TERTIER};\n  font-size: ${GFONT.SIZE[5]};\n  font-weight: 600;\n  grid-area: name;\n  letter-spacing: 0.5px;\n  text-transform: uppercase;\n  text-align: center;\n\n  ${mq[3]} {\n    font-size: ${GFONT.SIZE[5]};\n    letter-spacing: 0.8px;\n  }\n`;\n\nexport const WrapperImg = styled.div`\n  display: flex;\n  grid-area: image;\n  justify-content: center;\n`;\n\nexport const Img = styled.img`\n  max-width: 100%;\n\n  ${mq[3]} {\n    transform: scale(1.15);\n  }\n`;\n\nexport const Pokeball = styled.div`\n  grid-area: ball;\n  align-self: flex-end;\n`;\n\nexport const ULAbilities = styled.ul`\n  grid-area: abilities;\n`;\n\nexport const ULMoves = styled.ul`\n  padding-top: 0.4rem;\n  grid-area: moves;\n`;\n\nexport const ULTypes = styled.ul`\n  padding-top: 0.4rem;\n  grid-area: types;\n`;\n\nexport const Li = styled.li`\n  color: ${GCOLOR.TERTIER};\n  font-size: ${GFONT.SIZE[2]};\n  min-width: 50%;\n  padding-left: 1rem;\n  padding-top: 0.15rem;\n  position: relative;\n\n  &:before {\n    content: \"✓\";\n    position: absolute;\n    left: 0;\n  }\n\n  ${mq[3]} {\n    font-size: ${GFONT.SIZE[1]};\n    padding-left: 1.25rem;\n  }\n`;\n\nexport const Title = styled.p`\n  color: ${GCOLOR.BEIGE};\n  font-size: ${GFONT.SIZE[1]};\n  font-weight: 600;\n\n  ${mq[3]} {\n    font-size: ${GFONT.SIZE[2]};\n  }\n`;\n\nconst DetailPageButton = styled(BaseButton)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 0.85rem;\n  padding-bottom: 0.75rem;\n  padding-top: 0.75rem;\n  width: 250px;\n\n  ${mq[3]} {\n    font-size: ${GFONT.SIZE[2]};\n  }\n`;\n\nexport const Dice = styled(DetailPageButton)``;\nexport const Lucky = styled(DetailPageButton)``;\nexport const PokemonSecure = styled(DetailPageButton)``;\n","import React, { useState } from \"react\";\nimport { IconBack } from \"../../assets/IconPack\";\nimport { LISTACTION } from \"../../Reducers/listReducer\";\nimport PokemonForm from \"../PokemonForm\";\n\nimport {\n  Container,\n  DetailPage,\n  Dice,\n  Img,\n  Li,\n  Lucky,\n  Name,\n  PokemonSecure,\n  Title,\n  ULAbilities,\n  ULMoves,\n  ULTypes,\n  WrapperButtons,\n  WrapperImg,\n} from \"./style\";\n\nconst PokemonDetailsPage = ({ data, img, dispatchList }) => {\n  const [limitMoves] = useState(15);\n  const [nameGiven, setNameGiven] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [showMessage, setShowMessage] = useState(\"Catch'em\");\n  const [showBeforeForm, setShowBeforeForm] = useState(true);\n\n  /**\n   *  handleClickRandom,\n   *  if result lower than 0.5, not success\n   *  else success\n   */\n  const handleClickRandom = () => {\n    const result = Math.random().toFixed(2);\n\n    if (result < 0.5) {\n      setSuccess(false);\n      setShowMessage(\"Try again\");\n      setTimeout(() => {\n        setShowMessage(\"Catch'em\");\n      }, 2000);\n    } else {\n      setSuccess(true);\n\n      setTimeout(() => {\n        setShowBeforeForm((prev) => !prev);\n      }, 2000);\n    }\n  };\n\n  const handleBtnBack = () => {\n    dispatchList({ type: LISTACTION.CLOSE });\n  };\n\n  const handleNameGiven = () => {\n    setNameGiven((prev) => !prev);\n  };\n\n  return (\n    <DetailPage className=\"pokemon-detail-page\">\n      <WrapperButtons className=\"wrapper-buttons\">\n        <span className=\"btn-back\" onClick={() => handleBtnBack()}>\n          <IconBack />\n        </span>\n      </WrapperButtons>\n\n      <Container className=\"container\" win>\n        <Name className=\"name\">{data.name}</Name>\n        <WrapperImg className=\"wrapper-img\">\n          <Img className=\"pokemon-img\" src={img} alt=\"pokemon-img\" />\n        </WrapperImg>\n\n        {data && (\n          <>\n            <ULAbilities>\n              <Title>Abilities:</Title>\n              {data.abilities.map((ability, key) => (\n                <Li key={key} className=\"list-ability\">\n                  {ability.ability.name}\n                </Li>\n              ))}\n            </ULAbilities>\n\n            <ULMoves>\n              <Title>Moves:</Title>\n              {data.moves.map(\n                (move, key) =>\n                  key < limitMoves && (\n                    <Li key={key} className=\"list-move\">\n                      {move.move.name}\n                    </Li>\n                  )\n              )}\n            </ULMoves>\n\n            <ULTypes>\n              <Title>Types:</Title>\n              {data.types.map((type, index) => (\n                <Li key={index} className=\"list-type\">\n                  {type.type.name}\n                </Li>\n              ))}\n            </ULTypes>\n          </>\n        )}\n      </Container>\n\n      {!success ? (\n        <Dice onClick={() => handleClickRandom()}>{showMessage}</Dice>\n      ) : showBeforeForm ? (\n        <Lucky>You are Lucky!</Lucky>\n      ) : !nameGiven ? (\n        <PokemonForm done={handleNameGiven} data={data} img={img} />\n      ) : (\n        <PokemonSecure onClick={() => handleBtnBack()}>\n          Pokemon added!\n        </PokemonSecure>\n      )}\n    </DetailPage>\n  );\n};\n\nexport default PokemonDetailsPage;\n","import styled from \"@emotion/styled\";\nimport { GCOLOR, GFONT, GSPACER, mq } from \"../../styles/globalStyle\";\n\nexport const Container = styled.div`\n  font-size: ${GFONT.SIZE[2]};\n  padding: 1rem ${GSPACER.GUTTER[0]};\n  position: relative;\n  min-height: 100vh;\n\n  ${mq[3]} {\n    font-size: ${GFONT.SIZE[1]};\n    margin: 0 auto;\n    max-width: var(--screen-max-width);\n    padding-left: ${GSPACER.GUTTER[3]};\n    padding-right: ${GSPACER.GUTTER[3]};\n  }\n`;\n\nexport const WrapperButtonCollection = styled.div`\n  align-items: center;\n  color: ${GCOLOR.TERTIER};\n  display: flex;\n  gap: 0.5rem;\n  justify-content: end;\n  height: 1.5rem;\n  position: relative;\n  width: 100%;\n\n  span {\n    cursor: pointer;\n    max-height: 1.5rem;\n  }\n`;\n\nexport const ContainerCards = styled.div`\n  padding-left: ${GSPACER.GUTTER[0]};\n  padding-right: ${GSPACER.GUTTER[0]};\n  position: relative;\n  width: 100%;\n\n  ${mq[3]} {\n    margin: 0 auto;\n    max-width: var(--screen-max-width);\n    padding-left: ${GSPACER.GUTTER[3]};\n    padding-right: ${GSPACER.GUTTER[3]};\n  }\n`;\n\nexport const Img = styled.img`\n  transform: scale(0.9);\n\n  ${mq[3]} {\n    transform: scale(1);\n  }\n`;\n\nexport const ListCards = styled.ul`\n  display: grid;\n  grid-gap: 5px;\n  grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));\n  padding-bottom: 0.5rem;\n  padding-top: 0.5rem;\n  position: relative;\n\n  ${mq[2]} {\n    grid-gap: 0.5rem;\n  }\n\n  ${mq[3]} {\n    grid-gap: 1.2rem;\n    padding-top: 0;\n    padding-bottom: 2rem;\n  }\n`;\n\nexport const CardItem = styled.li`\n  align-items: center;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  margin-top: 0.2rem;\n`;\n\nexport const P = styled.p`\n  padding-top: 0.2rem;\n  padding-bottom: 0.2rem;\n  font-size: ${GFONT.SIZE[2]};\n\n  ${mq[3]} {\n    font-size: ${GFONT.SIZE[1]};\n  }\n`;\n\nexport const WrapperButton = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 28vw);\n  padding-bottom: 1.2rem;\n  padding-top: 1.2rem;\n  position: relative;\n  justify-content: space-between;\n  margin-left: auto;\n  width: 75%;\n\n  @media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape) and (-webkit-min-device-pixel-ratio: 1) {\n    grid-template-columns: repeat(auto-fit, 15vw);\n    width: 35%;\n  }\n\n  ${mq[4]} {\n    grid-template-columns: repeat(auto-fit, 12.5vw);\n    max-width: var(--screen-max-width);\n    padding-bottom: 2.25rem;\n    padding-top: 2.25rem;\n    width: 40%;\n    margin-left: auto;\n  }\n`;\n\nexport const WrapperLoadingScreen = styled.div`\n  align-items: center;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  left: 0;\n  min-height: 100vh;\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 100%;\n`;\n\nexport const LoadingText = styled.p`\n  color: ${GCOLOR.BLUEISH};\n  font-size: ${GFONT.SIZE[7]};\n`;\n\nexport const WrapperTitle = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  padding-top: 1.5rem;\n  padding-bottom: 1.5em;\n`;\n\nexport const Title = styled.p`\n  font-size: ${GFONT.SIZE[7]};\n\n  ${mq[3]} {\n    max-width: var(--screen-max-width);\n  }\n`;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { gqlQuery, gqlQueryAbilites } from \"../PokemonQuerying\";\nimport { LISTACTION } from \"../../Reducers/listReducer\";\nimport { ListContext, PokemonContext } from \"../../contexts/PokemonContext\";\nimport PokemonCollection from \"../PokemonCollection/PokemonCollection\";\nimport PokemonDetailsPage from \"../PokemonDetailsPage\";\n\nimport { Button } from \"../../styles/button\";\nimport {\n  Container,\n  CardItem,\n  ContainerCards,\n  Img,\n  ListCards,\n  LoadingText,\n  P,\n  Title,\n  WrapperButton,\n  WrapperLoadingScreen,\n  WrapperTitle,\n  WrapperButtonCollection,\n} from \"./style\";\n\nimport { IconCollection } from \"../../assets/IconPack\";\n\nconst PokemonListPage = () => {\n  const { listState, dispatchList } = useContext(ListContext);\n  const { pokemons } = useContext(PokemonContext);\n\n  const offset = listState.offset;\n  const limit = listState.limit;\n\n  const [pokemonName, setPokemonName] = useState(\"ditto\");\n  const [result, setResult] = useState();\n  const [pokemonDetails, setPokemonDetails] = useState();\n\n  const Fetching = () => {\n    fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: gqlQuery,\n        variables: {\n          limit,\n          offset,\n        },\n      }),\n      method: \"POST\",\n    })\n      .then((res) => res.json())\n      .then((res) => setResult(res?.data?.pokemons));\n  };\n\n  const FetchingPokemonDetails = () => {\n    fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: gqlQueryAbilites,\n        variables: {\n          pokemonName,\n        },\n      }),\n      method: \"POST\",\n    })\n      .then((res) => res.json())\n      .then((res) => setPokemonDetails(res?.data?.pokemon));\n  };\n\n  useEffect(() => {\n    Fetching();\n    return () => {}; // eslint-disable-next-line\n  }, [offset]);\n\n  useEffect(() => {\n    FetchingPokemonDetails();\n    return () => {}; // eslint-disable-next-line\n  }, [pokemonName]);\n\n  const handleClickPokemon = (item) => {\n    // extract pokemon name, and image\n    setPokemonName(item.name);\n\n    dispatchList({\n      type: LISTACTION.FETCH_POKEMON,\n      payload: { image: item.image, name: item.name },\n    });\n\n    if (pokemonDetails) {\n      dispatchList({\n        type: LISTACTION.FETCH_DONE,\n      });\n    }\n  };\n\n  const handleClickPrev = () => {\n    dispatchList({ type: LISTACTION.REDUCE_OFFSET });\n  };\n\n  const handleClickNext = () => {\n    dispatchList({ type: LISTACTION.RAISE_OFFSET });\n  };\n\n  const handleClickCollection = () => {\n    dispatchList({ type: LISTACTION.TOGGLE_COLLECTION });\n  };\n\n  return (\n    <Container className=\"main-container\">\n      {pokemons.length > 0 && (\n        <WrapperButtonCollection className=\"wrapper-buttons\">\n          Show Collection\n          <span onClick={() => handleClickCollection()}>\n            <IconCollection />\n          </span>\n        </WrapperButtonCollection>\n      )}\n\n      {!listState.showCollection && (\n        <ContainerCards className=\"container-cards\">\n          {!listState.showDetail && !listState.isLoadingPokemonDetail && (\n            <>\n              <WrapperTitle className=\"wrapper-title\">\n                <Title className=\"title\">List of pokemons</Title>\n              </WrapperTitle>\n              <ListCards className=\"list-cards\">\n                {result &&\n                  result?.results?.map((item, key) => {\n                    return (\n                      <CardItem\n                        // get pokemon information more details, show modal\n                        onClick={() => handleClickPokemon(item)}\n                        key={key}\n                        className=\"card-item\"\n                      >\n                        <Img className=\"\" src={item.image} alt=\"img\" />\n                        <P>{item.name}</P>\n                      </CardItem>\n                    );\n                  })}\n              </ListCards>\n\n              <WrapperButton className=\"wrapper-buttons\">\n                <Button\n                  className=\"btn-prev\"\n                  onClick={() => handleClickPrev()}\n                  disabled={listState.offset <= 1}\n                >\n                  <span>Prev</span>\n                </Button>\n\n                <Button className=\"btn-next\" onClick={() => handleClickNext()}>\n                  <span>Next</span>\n                </Button>\n              </WrapperButton>\n            </>\n          )}\n\n          {listState.isLoadingPokemonDetail && (\n            <WrapperLoadingScreen>\n              <LoadingText>Loading...</LoadingText>\n            </WrapperLoadingScreen>\n          )}\n\n          {listState.showDetail && (\n            <PokemonDetailsPage\n              data={pokemonDetails}\n              img={listState.image}\n              dispatchList={dispatchList}\n            />\n          )}\n        </ContainerCards>\n      )}\n\n      {listState.showCollection && <PokemonCollection />}\n    </Container>\n  );\n};\n\nexport default PokemonListPage;\n","export const gqlQuery = `query pokemons($limit: Int, $offset: Int) {\n  pokemons(limit: $limit, offset: $offset) {\n    count\n    next\n    previous\n    status\n    message\n    results {\n      url\n      name\n      image\n    }\n  }\n}`;\n\nexport const gqlQueryAbilites = `query pokemon($pokemonName: String!) {\n  pokemon(name: $pokemonName) {\n    id\n    name\n    abilities {\n      ability {\n        name\n      }\n    }\n    moves {\n      move {\n        name\n      }\n    }\n    types {\n      type {\n        name\n      }\n    }\n    message\n    status\n  }\n}`;\n","import React from \"react\";\nimport PokemonContextProvider from \"./contexts/PokemonContext\";\n\nimport { GCOLOR } from \"./styles/globalStyle\";\nimport { Global, css } from \"@emotion/react\";\nimport PokemonListPage from \"./components/PokemonListPage\";\n\nconst GlobalStyles = css`\n  * {\n    box-sizing: border-box;\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  :root {\n    --screen-max-width: 1080px;\n  }\n\n  h1,\n  h2,\n  p {\n    color: ${GCOLOR.TERTIER};\n    margin-block-start: 0;\n    margin-block-end: 0;\n  }\n\n  ul {\n    margin: 0;\n    padding-inline-start: 0;\n  }\n\n  input,\n  button {\n    border: 0;\n    border-radius: 0;\n    padding: 0;\n  }\n\n  ul {\n    list-style-type: none;\n  }\n\n  img {\n    max-width: 100%;\n  }\n\n  .dflex {\n    display: flex;\n  }\n\n  .flex-col {\n    flex-direction: column;\n  }\n\n  .flex-row {\n    flex-direction: row;\n  }\n`;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Global styles={GlobalStyles} />\n      <PokemonContextProvider>\n        <PokemonListPage />\n      </PokemonContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"ast":null,"code":"var _jsxFileName = \"/Users/hendra/Development/pokemon-catch/src/components/pokemonListPage/index.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\n\n/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from \"react\";\nimport { gqlQuery, gqlQueryAbilites } from \"../Querying\";\nimport { css } from \"@emotion/css\";\nimport { mq } from \"../../styles/globalStyle\";\nimport { Button } from \"../../styles/button\";\nimport { Container } from \"../../styles/container\";\nimport PokemonModal from \"../pokemon-modal\";\nimport { Li, Ul } from \"./style\";\n\nconst PokemonListPage = () => {\n  _s();\n\n  var _result$results;\n\n  const [offset, setOffset] = useState(1);\n  const [limit, setLimit] = useState(20);\n  const [result, setResult] = useState();\n  const [pokemonName, setPokemonName] = useState(\"ditto\");\n  const [pokemonImg, setPokemonImg] = useState();\n  const [pokemonDetails, setPokemonDetails] = useState();\n  const [openModal, setOpenModal] = useState(false);\n\n  const Fetching = () => {\n    fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: gqlQuery,\n        variables: {\n          limit,\n          offset\n        }\n      }),\n      method: \"POST\"\n    }).then(res => res.json()).then(res => {\n      var _res$data;\n\n      return setResult(res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.pokemons);\n    });\n  };\n\n  const FetchingPokemonDetails = () => {\n    fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: gqlQueryAbilites,\n        variables: {\n          pokemonName\n        }\n      }),\n      method: \"POST\"\n    }).then(res => res.json()).then(res => {\n      var _res$data2;\n\n      return setPokemonDetails(res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.pokemon);\n    });\n  };\n\n  useEffect(() => {\n    Fetching();\n    return () => {};\n  }, [offset]);\n  useEffect(() => {\n    FetchingPokemonDetails();\n    return () => {};\n  }, [pokemonName]);\n  useEffect(() => {\n    pokemonDetails && console.log(pokemonDetails);\n    return () => {};\n  }, [pokemonDetails]);\n\n  const handleClickPokemon = item => {\n    // extract pokemon name, and image\n    setPokemonImg(item.image);\n    setPokemonName(item.name);\n    setOpenModal(prev => !prev);\n  };\n\n  const handleClickPrev = () => {\n    setOffset(prev => prev - 20);\n  };\n\n  const handleClickNext = () => {\n    setOffset(prev => prev + 20);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"container-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Ul, {\n    className: \"list-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, result && (result === null || result === void 0 ? void 0 : (_result$results = result.results) === null || _result$results === void 0 ? void 0 : _result$results.map((item, key) => {\n    return /*#__PURE__*/React.createElement(Li // get pokemon information\n    , {\n      onClick: () => handleClickPokemon(item),\n      key: key,\n      className: `dflex flex-col pokemon-cards`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: item.image,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, item.name));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `dflex wrapper-buttons ${css`\n          justify-content: flex-end;\n\n          ${mq[0]} {\n            padding-top: 1.2rem;\n            padding-bottom: 1.2rem;\n          }\n\n          ${mq[3]} {\n            padding-top: 2.5rem;\n            padding-bottom: 2.5rem;\n          }\n        `}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: `btn-prev`,\n    onClick: () => handleClickPrev(),\n    disabled: offset <= 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"Prev\"), /*#__PURE__*/React.createElement(Button, {\n    className: `btn-next ${css`\n            margin-left: 1rem;\n          `}`,\n    onClick: () => handleClickNext(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"Next\")), openModal && /*#__PURE__*/React.createElement(PokemonModal, {\n    data: pokemonDetails,\n    img: pokemonImg,\n    modal: setOpenModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }));\n};\n\n_s(PokemonListPage, \"w2moOypNtlJLpyvZRd56LZuA5Fk=\");\n\n_c = PokemonListPage;\nexport default PokemonListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonListPage\");","map":{"version":3,"sources":["/Users/hendra/Development/pokemon-catch/src/components/pokemonListPage/index.jsx"],"names":["React","useEffect","useState","gqlQuery","gqlQueryAbilites","css","mq","Button","Container","PokemonModal","Li","Ul","PokemonListPage","offset","setOffset","limit","setLimit","result","setResult","pokemonName","setPokemonName","pokemonImg","setPokemonImg","pokemonDetails","setPokemonDetails","openModal","setOpenModal","Fetching","fetch","credentials","headers","body","JSON","stringify","query","variables","method","then","res","json","data","pokemons","FetchingPokemonDetails","pokemon","console","log","handleClickPokemon","item","image","name","prev","handleClickPrev","handleClickNext","results","map","key"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from \"react\";\nimport { gqlQuery, gqlQueryAbilites } from \"../Querying\";\n\nimport { css } from \"@emotion/css\";\nimport { mq } from \"../../styles/globalStyle\";\nimport { Button } from \"../../styles/button\";\nimport { Container } from \"../../styles/container\";\nimport PokemonModal from \"../pokemon-modal\";\nimport { Li, Ul } from \"./style\";\n\nconst PokemonListPage = () => {\n  const [offset, setOffset] = useState(1);\n  const [limit, setLimit] = useState(20);\n  const [result, setResult] = useState();\n\n  const [pokemonName, setPokemonName] = useState(\"ditto\");\n  const [pokemonImg, setPokemonImg] = useState();\n  const [pokemonDetails, setPokemonDetails] = useState();\n  const [openModal, setOpenModal] = useState(false);\n\n  const Fetching = () => {\n    fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: gqlQuery,\n        variables: {\n          limit,\n          offset,\n        },\n      }),\n      method: \"POST\",\n    })\n      .then((res) => res.json())\n      .then((res) => setResult(res?.data?.pokemons));\n  };\n\n  const FetchingPokemonDetails = () => {\n    fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: gqlQueryAbilites,\n        variables: {\n          pokemonName,\n        },\n      }),\n      method: \"POST\",\n    })\n      .then((res) => res.json())\n      .then((res) => setPokemonDetails(res?.data?.pokemon));\n  };\n\n  useEffect(() => {\n    Fetching();\n\n    return () => {};\n  }, [offset]);\n\n  useEffect(() => {\n    FetchingPokemonDetails();\n\n    return () => {};\n  }, [pokemonName]);\n\n  useEffect(() => {\n    pokemonDetails && console.log(pokemonDetails);\n    return () => {};\n  }, [pokemonDetails]);\n\n  const handleClickPokemon = (item) => {\n    // extract pokemon name, and image\n    setPokemonImg(item.image);\n    setPokemonName(item.name);\n    setOpenModal((prev) => !prev);\n  };\n\n  const handleClickPrev = () => {\n    setOffset((prev) => prev - 20);\n  };\n\n  const handleClickNext = () => {\n    setOffset((prev) => prev + 20);\n  };\n\n  return (\n    <Container className=\"container-cards\">\n      <Ul className=\"list-cards\">\n        {result &&\n          result?.results?.map((item, key) => {\n            return (\n              <Li\n                // get pokemon information\n                onClick={() => handleClickPokemon(item)}\n                key={key}\n                className={`dflex flex-col pokemon-cards`}\n              >\n                {/* if pokemon equals to the one selected, it should be highlighted otherwise lower the opacity */}\n                <img src={item.image} alt=\"\" />\n                <p>{item.name}</p>\n              </Li>\n            );\n          })}\n      </Ul>\n\n      <div\n        className={`dflex wrapper-buttons ${css`\n          justify-content: flex-end;\n\n          ${mq[0]} {\n            padding-top: 1.2rem;\n            padding-bottom: 1.2rem;\n          }\n\n          ${mq[3]} {\n            padding-top: 2.5rem;\n            padding-bottom: 2.5rem;\n          }\n        `}`}\n      >\n        <Button\n          className={`btn-prev`}\n          onClick={() => handleClickPrev()}\n          disabled={offset <= 1}\n        >\n          Prev\n        </Button>\n\n        <Button\n          className={`btn-next ${css`\n            margin-left: 1rem;\n          `}`}\n          onClick={() => handleClickNext()}\n        >\n          Next\n        </Button>\n      </div>\n\n      {openModal && (\n        <PokemonModal\n          data={pokemonDetails}\n          img={pokemonImg}\n          modal={setOpenModal}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default PokemonListPage;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/hendra/Development/pokemon-catch/src/reducers/pokemonsListReducer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\n\nfunction init(initialOffset) {\n  return {\n    offset: initialOffset\n  };\n}\n\nconst pokemonsListReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOWER_OFFSET\":\n      {\n        return console.log(\"4\", action, state);\n      }\n\n    case \"RAISE_OFFSET\":\n      {\n        return console.log(\"8\", action, state);\n      }\n\n    case \"LIMIT\":\n      {\n        return console.log(\"12\", action, state);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default pokemonsListReducer;\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"increment\":\n      return {\n        count: state.count + 1\n      };\n\n    case \"decrement\":\n      return {\n        count: state.count - 1\n      };\n\n    case \"reset\":\n      return init(action.payload);\n\n    default:\n      throw new Error();\n  }\n}\n\nfunction Counter({\n  initialCount\n}) {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialCount, init);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \"Count: \", state.count, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: \"reset\",\n      payload: initialCount\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \" \", \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: \"decrement\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: \"increment\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"+\"));\n}\n\n_s(Counter, \"lpkAvzaijKoaZVi3K36ZWcAB+QM=\");\n\n_c = Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/hendra/Development/pokemon-catch/src/reducers/pokemonsListReducer.jsx"],"names":["React","init","initialOffset","offset","pokemonsListReducer","state","action","type","console","log","reducer","count","payload","Error","Counter","initialCount","dispatch","useReducer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,SAASC,IAAT,CAAcC,aAAd,EAA6B;AAC3B,SAAO;AAAEC,IAAAA,MAAM,EAAED;AAAV,GAAP;AACD;;AAED,MAAME,mBAAmB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AAAqB;AACnB,eAAOC,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBH,MAAjB,EAAyBD,KAAzB,CAAP;AACD;;AAED,SAAK,cAAL;AAAqB;AACnB,eAAOG,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBH,MAAjB,EAAyBD,KAAzB,CAAP;AACD;;AAED,SAAK,OAAL;AAAc;AACZ,eAAOG,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBH,MAAlB,EAA0BD,KAA1B,CAAP;AACD;;AAED;AACE,aAAOA,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeD,mBAAf;;AAEA,SAASM,OAAT,CAAiBL,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO;AAAEI,QAAAA,KAAK,EAAEN,KAAK,CAACM,KAAN,GAAc;AAAvB,OAAP;;AACF,SAAK,WAAL;AACE,aAAO;AAAEA,QAAAA,KAAK,EAAEN,KAAK,CAACM,KAAN,GAAc;AAAvB,OAAP;;AACF,SAAK,OAAL;AACE,aAAOV,IAAI,CAACK,MAAM,CAACM,OAAR,CAAX;;AACF;AACE,YAAM,IAAIC,KAAJ,EAAN;AARJ;AAUD;;AAED,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAAmC;AAAA;;AACjC,QAAM,CAACV,KAAD,EAAQW,QAAR,IAAoBC,UAAU,CAACP,OAAD,EAAUK,YAAV,EAAwBd,IAAxB,CAApC;AACA,sBACE,qDACUI,KAAK,CAACM,KADhB,eAEE;AACE,IAAA,OAAO,EAAE,MAAMK,QAAQ,CAAC;AAAET,MAAAA,IAAI,EAAE,OAAR;AAAiBK,MAAAA,OAAO,EAAEG;AAA1B,KAAD,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGG,GAHH,UAFF,eAQE;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAAC;AAAET,MAAAA,IAAI,EAAE;AAAR,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARF,eASE;AAAQ,IAAA,OAAO,EAAE,MAAMS,QAAQ,CAAC;AAAET,MAAAA,IAAI,EAAE;AAAR,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SATF,CADF;AAaD;;GAfQO,O;;KAAAA,O","sourcesContent":["import React from \"react\";\nfunction init(initialOffset) {\n  return { offset: initialOffset };\n}\n\nconst pokemonsListReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOWER_OFFSET\": {\n      return console.log(\"4\", action, state);\n    }\n\n    case \"RAISE_OFFSET\": {\n      return console.log(\"8\", action, state);\n    }\n\n    case \"LIMIT\": {\n      return console.log(\"12\", action, state);\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default pokemonsListReducer;\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"increment\":\n      return { count: state.count + 1 };\n    case \"decrement\":\n      return { count: state.count - 1 };\n    case \"reset\":\n      return init(action.payload);\n    default:\n      throw new Error();\n  }\n}\n\nfunction Counter({ initialCount }) {\n  const [state, dispatch] = useReducer(reducer, initialCount, init);\n  return (\n    <>\n      Count: {state.count}\n      <button\n        onClick={() => dispatch({ type: \"reset\", payload: initialCount })}\n      >\n        {\" \"}\n        Reset\n      </button>\n      <button onClick={() => dispatch({ type: \"decrement\" })}>-</button>\n      <button onClick={() => dispatch({ type: \"increment\" })}>+</button>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/hendra/Development/pokemon-catch/src/components/PokemonListPage/index.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\n\n/* eslint-disable no-unused-vars */\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { gqlQuery, gqlQueryAbilites } from \"../PokemonQuerying\";\nimport { PokemonContext } from \"../../contexts/PokemonContext\";\nimport PokemonModal from \"../pokemon-modal\";\nimport { REDUCERCONSTANT } from \"../../Constant/constantReducer\";\nimport { Button } from \"../../styles/button\";\nimport { ContainerCards, Img, Li, P, Ul, WrapperButton } from \"./style\";\nconst {\n  POPULATE_POKEMON\n} = REDUCERCONSTANT;\n\nconst PokemonListPage = () => {\n  _s();\n\n  var _result$results;\n\n  const {\n    pokemons,\n    dispatch\n  } = useContext(PokemonContext);\n  const [offset, setOffset] = useState(1);\n  const [limit, _] = useState(20);\n  const [result, setResult] = useState();\n  const [pokemonName, setPokemonName] = useState(\"ditto\");\n  const [pokemonImg, setPokemonImg] = useState();\n  const [pokemonDetails, setPokemonDetails] = useState();\n  const [openModal, setOpenModal] = useState(false);\n\n  const Fetching = () => {\n    fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: gqlQuery,\n        variables: {\n          limit,\n          offset\n        }\n      }),\n      method: \"POST\"\n    }).then(res => res.json()).then(res => {\n      var _res$data;\n\n      return setResult(res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.pokemons);\n    });\n  };\n\n  const FetchingPokemonDetails = () => {\n    fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: gqlQueryAbilites,\n        variables: {\n          pokemonName\n        }\n      }),\n      method: \"POST\"\n    }).then(res => res.json()).then(res => {\n      var _res$data2;\n\n      return setPokemonDetails(res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.pokemon);\n    });\n  };\n\n  useEffect(() => {\n    Fetching();\n    return () => {};\n  }, [offset]);\n  useEffect(() => {\n    FetchingPokemonDetails();\n    return () => {};\n  }, [pokemonName]);\n\n  const handleClickPokemon = item => {\n    // extract pokemon name, and image\n    setPokemonImg(item.image);\n    setPokemonName(item.name);\n    /*  setOpenModal((prev) => !prev); */\n\n    dispatch({\n      type: POPULATE_POKEMON,\n      pokemon: {\n        image: item.image,\n        name: item.name,\n        data: pokemonDetails\n      }\n    });\n  };\n\n  const handleClickPrev = () => {\n    setOffset(prev => prev - 20);\n  };\n\n  const handleClickNext = () => {\n    setOffset(prev => prev + 20);\n  };\n\n  return /*#__PURE__*/React.createElement(ContainerCards, {\n    className: \"container-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Ul, {\n    className: \"list-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, result && (result === null || result === void 0 ? void 0 : (_result$results = result.results) === null || _result$results === void 0 ? void 0 : _result$results.map((item, key) => {\n    return /*#__PURE__*/React.createElement(Li // get pokemon information more details, show modal\n    , {\n      onClick: () => handleClickPokemon(item),\n      key: key,\n      className: `pokemon-cards`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Img, {\n      className: \"\",\n      src: item.image,\n      alt: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(P, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, item.name));\n  }))), /*#__PURE__*/React.createElement(WrapperButton, {\n    className: \"wrapper-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-prev\",\n    onClick: () => handleClickPrev(),\n    disabled: offset <= 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"Prev\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-next\",\n    onClick: () => handleClickNext(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"Next\")));\n};\n\n_s(PokemonListPage, \"vfs145RCXAXstiPQMz0Bnlf0jwo=\");\n\n_c = PokemonListPage;\nexport default PokemonListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonListPage\");","map":{"version":3,"sources":["/Users/hendra/Development/pokemon-catch/src/components/PokemonListPage/index.jsx"],"names":["React","useContext","useEffect","useState","gqlQuery","gqlQueryAbilites","PokemonContext","PokemonModal","REDUCERCONSTANT","Button","ContainerCards","Img","Li","P","Ul","WrapperButton","POPULATE_POKEMON","PokemonListPage","pokemons","dispatch","offset","setOffset","limit","_","result","setResult","pokemonName","setPokemonName","pokemonImg","setPokemonImg","pokemonDetails","setPokemonDetails","openModal","setOpenModal","Fetching","fetch","credentials","headers","body","JSON","stringify","query","variables","method","then","res","json","data","FetchingPokemonDetails","pokemon","handleClickPokemon","item","image","name","type","handleClickPrev","prev","handleClickNext","results","map","key"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-vars */\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { gqlQuery, gqlQueryAbilites } from \"../PokemonQuerying\";\nimport { PokemonContext } from \"../../contexts/PokemonContext\";\n\nimport PokemonModal from \"../pokemon-modal\";\nimport { REDUCERCONSTANT } from \"../../Constant/constantReducer\";\n\nimport { Button } from \"../../styles/button\";\nimport { ContainerCards, Img, Li, P, Ul, WrapperButton } from \"./style\";\n\nconst { POPULATE_POKEMON } = REDUCERCONSTANT;\n\nconst PokemonListPage = () => {\n  const { pokemons, dispatch } = useContext(PokemonContext);\n\n  const [offset, setOffset] = useState(1);\n  const [limit, _] = useState(20);\n  const [result, setResult] = useState();\n\n  const [pokemonName, setPokemonName] = useState(\"ditto\");\n  const [pokemonImg, setPokemonImg] = useState();\n  const [pokemonDetails, setPokemonDetails] = useState();\n  const [openModal, setOpenModal] = useState(false);\n\n  const Fetching = () => {\n    fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: gqlQuery,\n        variables: {\n          limit,\n          offset,\n        },\n      }),\n      method: \"POST\",\n    })\n      .then((res) => res.json())\n      .then((res) => setResult(res?.data?.pokemons));\n  };\n\n  const FetchingPokemonDetails = () => {\n    fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: gqlQueryAbilites,\n        variables: {\n          pokemonName,\n        },\n      }),\n      method: \"POST\",\n    })\n      .then((res) => res.json())\n      .then((res) => setPokemonDetails(res?.data?.pokemon));\n  };\n\n  useEffect(() => {\n    Fetching();\n\n    return () => {};\n  }, [offset]);\n\n  useEffect(() => {\n    FetchingPokemonDetails();\n\n    return () => {};\n  }, [pokemonName]);\n\n  const handleClickPokemon = (item) => {\n    // extract pokemon name, and image\n    setPokemonImg(item.image);\n    setPokemonName(item.name);\n    /*  setOpenModal((prev) => !prev); */\n\n    dispatch({\n      type: POPULATE_POKEMON,\n      pokemon: {\n        image: item.image,\n        name: item.name,\n        data: pokemonDetails,\n      },\n    });\n  };\n\n  const handleClickPrev = () => {\n    setOffset((prev) => prev - 20);\n  };\n\n  const handleClickNext = () => {\n    setOffset((prev) => prev + 20);\n  };\n\n  return (\n    <ContainerCards className=\"container-cards\">\n      <Ul className=\"list-cards\">\n        {result &&\n          result?.results?.map((item, key) => {\n            return (\n              <Li\n                // get pokemon information more details, show modal\n                onClick={() => handleClickPokemon(item)}\n                key={key}\n                className={`pokemon-cards`}\n              >\n                <Img className=\"\" src={item.image} alt=\"img\" />\n                <P>{item.name}</P>\n              </Li>\n            );\n          })}\n      </Ul>\n\n      <WrapperButton className=\"wrapper-buttons\">\n        <Button\n          className=\"btn-prev\"\n          onClick={() => handleClickPrev()}\n          disabled={offset <= 1}\n        >\n          Prev\n        </Button>\n\n        <Button className=\"btn-next\" onClick={() => handleClickNext()}>\n          Next\n        </Button>\n      </WrapperButton>\n\n      {/* {openModal && (\n        <PokemonModal\n          data={pokemonDetails}\n          img={pokemonImg}\n          modal={setOpenModal}\n        />\n      )} */}\n    </ContainerCards>\n  );\n};\n\nexport default PokemonListPage;\n"]},"metadata":{},"sourceType":"module"}
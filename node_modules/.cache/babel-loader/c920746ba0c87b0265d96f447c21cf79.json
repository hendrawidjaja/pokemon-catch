{"ast":null,"code":"var _jsxFileName = \"/Users/hendra/Development/pokemon-catch/src/components/pokemon-modal/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { css } from \"@emotion/css\";\nimport { ButtonClose, ContainerModal, Li, Modal, Name, Ul, WrapperInformation } from \"./style\";\n\nconst PokemonModal = ({\n  data,\n  img,\n  modal\n}) => {\n  _s();\n\n  useEffect(() => {\n    var mapdata = [{\n      a: \"x\",\n      b: \"y\"\n    }, {\n      a: 1,\n      b: 2\n    }, {\n      a: \"m\",\n      b: \"n\"\n    }, {\n      a: \"aa\",\n      b: \"bb\"\n    }, {\n      a: \"11\",\n      b: \"22\"\n    }];\n    var result = mapdata.splice(0, 3).map(_data => {\n      return {\n        a: _data.a\n      };\n    });\n    return () => {};\n  }, []);\n  return /*#__PURE__*/React.createElement(ContainerModal, {\n    className: \"container-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonClose, {\n    className: \"btn-close\",\n    onClick: () => modal(prev => !prev),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"\\u2715\"), /*#__PURE__*/React.createElement(Name, {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, data.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: `dflex content ${css`\n            position: relative;\n            flex-direction: column;\n          `}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `wrapper-img ${css`\n              position: relative;\n              margin-left: auto;\n              margin-right: auto;\n            `}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"pokemon-img\",\n    src: img,\n    alt: \"pokemon-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  })), data && /*#__PURE__*/React.createElement(WrapperInformation, {\n    className: \"wrapper-information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"information-abilities\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"Abilities:\", /*#__PURE__*/React.createElement(Ul, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, data.abilities.map((ability, key) => /*#__PURE__*/React.createElement(Li, {\n    key: key,\n    className: \"list-ability\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, ability.ability.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"information-moves\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Moves:\", /*#__PURE__*/React.createElement(Ul, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, data.moves.map((move, key) => /*#__PURE__*/React.createElement(Li, {\n    key: key,\n    className: \"list-move\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, move.move.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"information-types\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Types:\", /*#__PURE__*/React.createElement(Ul, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, data.types.map((type, key) => /*#__PURE__*/React.createElement(Li, {\n    key: key,\n    className: \"list-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, type.type.name))))))));\n};\n\n_s(PokemonModal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PokemonModal;\nexport default PokemonModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonModal\");","map":{"version":3,"sources":["/Users/hendra/Development/pokemon-catch/src/components/pokemon-modal/index.jsx"],"names":["React","useEffect","css","ButtonClose","ContainerModal","Li","Modal","Name","Ul","WrapperInformation","PokemonModal","data","img","modal","mapdata","a","b","result","splice","map","_data","prev","name","abilities","ability","key","moves","move","types","type"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { css } from \"@emotion/css\";\nimport {\n  ButtonClose,\n  ContainerModal,\n  Li,\n  Modal,\n  Name,\n  Ul,\n  WrapperInformation,\n} from \"./style\";\n\nconst PokemonModal = ({ data, img, modal }) => {\n  useEffect(() => {\n    var mapdata = [\n      { a: \"x\", b: \"y\" },\n      { a: 1, b: 2 },\n      { a: \"m\", b: \"n\" },\n      { a: \"aa\", b: \"bb\" },\n      { a: \"11\", b: \"22\" },\n    ];\n    var result = mapdata.splice(0, 3).map((_data) => {\n      return { a: _data.a };\n    });\n    return () => {};\n  }, []);\n\n  return (\n    <ContainerModal className=\"container-modal\">\n      <Modal className=\"modal\">\n        <ButtonClose\n          className=\"btn-close\"\n          onClick={() => modal((prev) => !prev)}\n        >\n          âœ•\n        </ButtonClose>\n\n        <Name className=\"name\">{data.name}</Name>\n\n        <div\n          className={`dflex content ${css`\n            position: relative;\n            flex-direction: column;\n          `}`}\n        >\n          <div\n            className={`wrapper-img ${css`\n              position: relative;\n              margin-left: auto;\n              margin-right: auto;\n            `}`}\n          >\n            <img className=\"pokemon-img\" src={img} alt=\"pokemon-img\" />\n          </div>\n\n          {data && (\n            <WrapperInformation className=\"wrapper-information\">\n              <div className=\"information-abilities\">\n                Abilities:\n                <Ul>\n                  {data.abilities.map((ability, key) => (\n                    <Li key={key} className=\"list-ability\">\n                      {ability.ability.name}\n                    </Li>\n                  ))}\n                </Ul>\n              </div>\n              <div className=\"information-moves\">\n                Moves:\n                <Ul>\n                  {data.moves.map((move, key) => (\n                    <Li key={key} className=\"list-move\">\n                      {move.move.name}\n                    </Li>\n                  ))}\n                </Ul>\n              </div>\n              <div className=\"information-types\">\n                Types:\n                <Ul>\n                  {data.types.map((type, key) => (\n                    <Li key={key} className=\"list-type\">\n                      {type.type.name}\n                    </Li>\n                  ))}\n                </Ul>\n              </div>\n            </WrapperInformation>\n          )}\n        </div>\n      </Modal>\n    </ContainerModal>\n  );\n};\n\nexport default PokemonModal;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/hendra/Development/pokemon-catch/src/components/list/index.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\n\n/* eslint-disable no-unused-vars */\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { PokemonContext } from \"../../contexts/PokemonContext\";\nimport { css } from \"@emotion/css\";\nimport { GFONT, GSPACER, mq } from \"../../styles/globalStyle\";\nconst gqlQuery = `query pokemons($limit: Int, $offset: Int) {\n  pokemons(limit: $limit, offset: $offset) {\n    count\n    next\n    previous\n    status\n    message\n    results {\n      url\n      name\n      image\n    }\n  }\n}`;\nconst gqlVariables = {\n  limit: 10,\n  offset: 1\n};\n\nconst PokemonListPage = () => {\n  _s();\n\n  const [result, setResult] = useState();\n  const {\n    pokemons\n  } = useContext(PokemonContext);\n\n  const Fetching = () => {\n    fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: gqlQuery,\n        variables: gqlVariables\n      }),\n      method: \"POST\"\n    }).then(res => res.json()).then(res => setResult(res.data.pokemons.results));\n  };\n\n  useEffect(() => {\n    Fetching();\n    return () => {};\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `container-cards ${css``}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: `list-cards dflex ${css`\n          flex-wrap: wrap;\n          justify-content: center;\n\n          ${mq[0]} {\n            padding: 1.2rem ${GSPACER.GUTTER[0]};\n          }\n\n          ${mq[3]} {\n            padding: 3rem ${GSPACER.GUTTER[3]};\n          }\n        `}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, result && result.map((item, key) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: key,\n      className: `dflex flex-col pokemon-cards ${css`\n                  align-items: center;\n\n                  ${mq[0]} {\n                    &:last-child {\n                      margin-right: auto;\n                    }\n                  }\n                `}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: item.image,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, item.name));\n  })));\n};\n\n_s(PokemonListPage, \"3aqWGuE+1cj2rKIFUVQGoQhp4uk=\");\n\n_c = PokemonListPage;\nexport default PokemonListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonListPage\");","map":{"version":3,"sources":["/Users/hendra/Development/pokemon-catch/src/components/list/index.jsx"],"names":["React","useContext","useEffect","useState","PokemonContext","css","GFONT","GSPACER","mq","gqlQuery","gqlVariables","limit","offset","PokemonListPage","result","setResult","pokemons","Fetching","fetch","credentials","headers","body","JSON","stringify","query","variables","method","then","res","json","data","results","GUTTER","map","item","key","image","name"],"mappings":";;;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,cAAT,QAA+B,+BAA/B;AAEA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,EAAzB,QAAmC,0BAAnC;AAEA,MAAMC,QAAQ,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAbA;AAeA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;;AAKA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,EAApC;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAef,UAAU,CAACG,cAAD,CAA/B;;AAEA,QAAMa,QAAQ,GAAG,MAAM;AACrBC,IAAAA,KAAK,CAAC,uCAAD,EAA0C;AAC7CC,MAAAA,WAAW,EAAE,MADgC;AAE7CC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFoC;AAG7CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,KAAK,EAAEf,QADY;AAEnBgB,QAAAA,SAAS,EAAEf;AAFQ,OAAf,CAHuC;AAO7CgB,MAAAA,MAAM,EAAE;AAPqC,KAA1C,CAAL,CASGC,IATH,CASSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EATjB,EAUGF,IAVH,CAUSC,GAAD,IAASb,SAAS,CAACa,GAAG,CAACE,IAAJ,CAASd,QAAT,CAAkBe,OAAnB,CAV1B;AAWD,GAZD;;AAcA7B,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ;AACR,WAAO,MAAM,CAAE,CAAf;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAG,mBAAkBZ,GAAI,EAAE,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAG,oBAAmBA,GAAI;AAC3C;AACA;AACA;AACA,YAAYG,EAAE,CAAC,CAAD,CAAI;AAClB,8BAA8BD,OAAO,CAACyB,MAAR,CAAe,CAAf,CAAkB;AAChD;AACA;AACA,YAAYxB,EAAE,CAAC,CAAD,CAAI;AAClB,4BAA4BD,OAAO,CAACyB,MAAR,CAAe,CAAf,CAAkB;AAC9C;AACA,SAAU,EAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcGlB,MAAM,IACLA,MAAM,CAACmB,GAAP,CAAW,CAACC,IAAD,EAAOC,GAAP,KAAe;AACxB,wBACE;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,SAAS,EAAG,gCAA+B9B,GAAI;AAC/D;AACA;AACA,oBAAoBG,EAAE,CAAC,CAAD,CAAI;AAC1B;AACA;AACA;AACA;AACA,iBAAkB,EAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYE;AAAK,MAAA,GAAG,EAAE0B,IAAI,CAACE,KAAf;AAAsB,MAAA,GAAG,EAAC,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,IAAI,CAACG,IAAT,CAbF,CADF;AAiBD,GAlBD,CAfJ,CADF,CADF;AAuCD,CA9DD;;GAAMxB,e;;KAAAA,e;AAgEN,eAAeA,eAAf","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-vars */\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { PokemonContext } from \"../../contexts/PokemonContext\";\n\nimport { css } from \"@emotion/css\";\nimport { GFONT, GSPACER, mq } from \"../../styles/globalStyle\";\n\nconst gqlQuery = `query pokemons($limit: Int, $offset: Int) {\n  pokemons(limit: $limit, offset: $offset) {\n    count\n    next\n    previous\n    status\n    message\n    results {\n      url\n      name\n      image\n    }\n  }\n}`;\n\nconst gqlVariables = {\n  limit: 10,\n  offset: 1,\n};\n\nconst PokemonListPage = () => {\n  const [result, setResult] = useState();\n  const { pokemons } = useContext(PokemonContext);\n\n  const Fetching = () => {\n    fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: gqlQuery,\n        variables: gqlVariables,\n      }),\n      method: \"POST\",\n    })\n      .then((res) => res.json())\n      .then((res) => setResult(res.data.pokemons.results));\n  };\n\n  useEffect(() => {\n    Fetching();\n    return () => {};\n  }, []);\n\n  return (\n    <div className={`container-cards ${css``}`}>\n      <ul\n        className={`list-cards dflex ${css`\n          flex-wrap: wrap;\n          justify-content: center;\n\n          ${mq[0]} {\n            padding: 1.2rem ${GSPACER.GUTTER[0]};\n          }\n\n          ${mq[3]} {\n            padding: 3rem ${GSPACER.GUTTER[3]};\n          }\n        `}`}\n      >\n        {result &&\n          result.map((item, key) => {\n            return (\n              <li\n                key={key}\n                className={`dflex flex-col pokemon-cards ${css`\n                  align-items: center;\n\n                  ${mq[0]} {\n                    &:last-child {\n                      margin-right: auto;\n                    }\n                  }\n                `}`}\n              >\n                <img src={item.image} alt=\"\" />\n                <p>{item.name}</p>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default PokemonListPage;\n"]},"metadata":{},"sourceType":"module"}
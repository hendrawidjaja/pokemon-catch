{"ast":null,"code":"export const LISTACTION = {\n  FETCH_POKEMON: \"FETCH POKEMON\",\n  FETCH_DONE: \"FETCH DONE\",\n  RAISE_OFFSET: \"RAISE OFFSET\",\n  REDUCE_OFFSET: \"REDUCE OFFSET\",\n  CLOSE: \"CLOSE\"\n};\n\nconst FetchingPokemonDetails = (pokemonName = \"ditto\") => {\n  fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n    credentials: \"omit\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      query: gqlQueryAbilites,\n      variables: {\n        pokemonName\n      }\n    }),\n    method: \"POST\"\n  }).then(res => res.json()).then(res => {\n    var _res$data;\n\n    return setPokemonDetails(res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.pokemon);\n  });\n};\n\n_c = FetchingPokemonDetails;\n\nconst listReducer = (state, action) => {\n  switch (action.type) {\n    case LISTACTION.FETCH_POKEMON:\n      {\n        return { ...state,\n          isLoading: true,\n          pokemonImg: action.payload.image,\n          pokemonName: action.payload.name\n        };\n      }\n\n    case LISTACTION.FETCH_DONE:\n      {\n        return { ...state,\n          isLoading: false,\n          openModal: !state.openModal\n        };\n      }\n\n    case LISTACTION.RAISE_OFFSET:\n      {\n        return { ...state,\n          offset: state.offset += 20\n        };\n      }\n\n    case LISTACTION.REDUCE_OFFSET:\n      {\n        return { ...state,\n          offset: state.offset <= 1 ? state.offset : state.offset -= 20\n        };\n      }\n\n    case LISTACTION.CLOSE:\n      {\n        return { ...state,\n          openModal: !state.openModal\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchingPokemonDetails\");","map":{"version":3,"sources":["/Users/hendra/Development/pokemon-catch/src/reducers/listReducer.jsx"],"names":["LISTACTION","FETCH_POKEMON","FETCH_DONE","RAISE_OFFSET","REDUCE_OFFSET","CLOSE","FetchingPokemonDetails","pokemonName","fetch","credentials","headers","body","JSON","stringify","query","gqlQueryAbilites","variables","method","then","res","json","setPokemonDetails","data","pokemon","listReducer","state","action","type","isLoading","pokemonImg","payload","image","name","openModal","offset"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG;AACxBC,EAAAA,aAAa,EAAE,eADS;AAExBC,EAAAA,UAAU,EAAE,YAFY;AAGxBC,EAAAA,YAAY,EAAE,cAHU;AAIxBC,EAAAA,aAAa,EAAE,eAJS;AAKxBC,EAAAA,KAAK,EAAE;AALiB,CAAnB;;AAQP,MAAMC,sBAAsB,GAAG,CAACC,WAAW,GAAG,OAAf,KAA2B;AACxDC,EAAAA,KAAK,CAAC,uCAAD,EAA0C;AAC7CC,IAAAA,WAAW,EAAE,MADgC;AAE7CC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFoC;AAG7CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,KAAK,EAAEC,gBADY;AAEnBC,MAAAA,SAAS,EAAE;AACTT,QAAAA;AADS;AAFQ,KAAf,CAHuC;AAS7CU,IAAAA,MAAM,EAAE;AATqC,GAA1C,CAAL,CAWGC,IAXH,CAWSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAXjB,EAYGF,IAZH,CAYSC,GAAD;AAAA;;AAAA,WAASE,iBAAiB,CAACF,GAAD,aAACA,GAAD,oCAACA,GAAG,CAAEG,IAAN,8CAAC,UAAWC,OAAZ,CAA1B;AAAA,GAZR;AAaD,CAdD;;KAAMjB,sB;;AAgBN,MAAMkB,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK3B,UAAU,CAACC,aAAhB;AAA+B;AAC7B,eAAO,EACL,GAAGwB,KADE;AAELG,UAAAA,SAAS,EAAE,IAFN;AAGLC,UAAAA,UAAU,EAAEH,MAAM,CAACI,OAAP,CAAeC,KAHtB;AAILxB,UAAAA,WAAW,EAAEmB,MAAM,CAACI,OAAP,CAAeE;AAJvB,SAAP;AAMD;;AAED,SAAKhC,UAAU,CAACE,UAAhB;AAA4B;AAC1B,eAAO,EACL,GAAGuB,KADE;AAELG,UAAAA,SAAS,EAAE,KAFN;AAGLK,UAAAA,SAAS,EAAE,CAACR,KAAK,CAACQ;AAHb,SAAP;AAKD;;AAED,SAAKjC,UAAU,CAACG,YAAhB;AAA8B;AAC5B,eAAO,EACL,GAAGsB,KADE;AAELS,UAAAA,MAAM,EAAGT,KAAK,CAACS,MAAN,IAAgB;AAFpB,SAAP;AAID;;AAED,SAAKlC,UAAU,CAACI,aAAhB;AAA+B;AAC7B,eAAO,EACL,GAAGqB,KADE;AAELS,UAAAA,MAAM,EAAET,KAAK,CAACS,MAAN,IAAgB,CAAhB,GAAoBT,KAAK,CAACS,MAA1B,GAAoCT,KAAK,CAACS,MAAN,IAAgB;AAFvD,SAAP;AAID;;AAED,SAAKlC,UAAU,CAACK,KAAhB;AAAuB;AACrB,eAAO,EACL,GAAGoB,KADE;AAELQ,UAAAA,SAAS,EAAE,CAACR,KAAK,CAACQ;AAFb,SAAP;AAID;;AAED;AACE,aAAOR,KAAP;AAxCJ;AA0CD,CA3CD;;AA6CA,eAAeD,WAAf","sourcesContent":["export const LISTACTION = {\n  FETCH_POKEMON: \"FETCH POKEMON\",\n  FETCH_DONE: \"FETCH DONE\",\n  RAISE_OFFSET: \"RAISE OFFSET\",\n  REDUCE_OFFSET: \"REDUCE OFFSET\",\n  CLOSE: \"CLOSE\",\n};\n\nconst FetchingPokemonDetails = (pokemonName = \"ditto\") => {\n  fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n    credentials: \"omit\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      query: gqlQueryAbilites,\n      variables: {\n        pokemonName,\n      },\n    }),\n    method: \"POST\",\n  })\n    .then((res) => res.json())\n    .then((res) => setPokemonDetails(res?.data?.pokemon));\n};\n\nconst listReducer = (state, action) => {\n  switch (action.type) {\n    case LISTACTION.FETCH_POKEMON: {\n      return {\n        ...state,\n        isLoading: true,\n        pokemonImg: action.payload.image,\n        pokemonName: action.payload.name,\n      };\n    }\n\n    case LISTACTION.FETCH_DONE: {\n      return {\n        ...state,\n        isLoading: false,\n        openModal: !state.openModal,\n      };\n    }\n\n    case LISTACTION.RAISE_OFFSET: {\n      return {\n        ...state,\n        offset: (state.offset += 20),\n      };\n    }\n\n    case LISTACTION.REDUCE_OFFSET: {\n      return {\n        ...state,\n        offset: state.offset <= 1 ? state.offset : (state.offset -= 20),\n      };\n    }\n\n    case LISTACTION.CLOSE: {\n      return {\n        ...state,\n        openModal: !state.openModal,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;\n"]},"metadata":{},"sourceType":"module"}
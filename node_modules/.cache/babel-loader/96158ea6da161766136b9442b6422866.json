{"ast":null,"code":"var _jsxFileName = \"/Users/hendra/Development/pokemon-catch/src/components/PokemonListPage/index.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\n\n/* eslint-disable no-unused-vars */\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { PokemonContext } from \"../../contexts/PokemonContext\";\nimport { gqlQuery, gqlQueryAbilites } from \"../PokemonQuerying\";\nimport { REDUCERCONSTANT } from \"../../Constant/constantReducer\";\nimport { Button } from \"../../styles/button\";\nimport { ContainerCards, Img, Li, P, Ul, WrapperButton } from \"./style\";\nconst {\n  POPULATE_POKEMON\n} = REDUCERCONSTANT;\n\nconst PokemonListPage = () => {\n  _s();\n\n  var _result$results;\n\n  let history = useHistory();\n  const {\n    dispatch\n  } = useContext(PokemonContext);\n  const [offset, setOffset] = useState(1);\n  const [limit] = useState(20);\n  const [result, setResult] = useState();\n  const [pokemonName] = useState(\"ditto\");\n  const [pokemonDetails, setPokemonDetails] = useState();\n\n  const Fetching = () => {\n    fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: gqlQuery,\n        variables: {\n          limit,\n          offset\n        }\n      }),\n      method: \"POST\"\n    }).then(res => res.json()).then(res => {\n      var _res$data;\n\n      return setResult(res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.pokemons);\n    });\n  };\n\n  const FetchingPokemonDetails = () => {\n    fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: gqlQueryAbilites,\n        variables: {\n          pokemonName\n        }\n      }),\n      method: \"POST\"\n    }).then(res => res.json()).then(res => {\n      var _res$data2;\n\n      return setPokemonDetails(res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.pokemon);\n    });\n  };\n\n  useEffect(() => {\n    Fetching();\n    return () => {};\n  }, [offset]);\n  useEffect(() => {\n    FetchingPokemonDetails();\n    return () => {};\n  }, [pokemonName]);\n\n  const handleClickPokemon = item => {\n    // extract pokemon name, iamge, and detail then send it to context\n    dispatch({\n      type: POPULATE_POKEMON,\n      pokemon: {\n        image: item.image,\n        name: item.name,\n        data: pokemonDetails\n      }\n    });\n  };\n\n  const handleClickPrev = () => {\n    setOffset(prev => prev - 20);\n  };\n\n  const handleClickNext = () => {\n    setOffset(prev => prev + 20);\n  };\n\n  return /*#__PURE__*/React.createElement(ContainerCards, {\n    className: \"container-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Ul, {\n    className: \"list-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, result && (result === null || result === void 0 ? void 0 : (_result$results = result.results) === null || _result$results === void 0 ? void 0 : _result$results.map((item, key) => {\n    return /*#__PURE__*/React.createElement(Li // get pokemon information more details, show modal\n    , {\n      onClick: () => handleClickPokemon(item),\n      key: key,\n      className: `pokemon-cards`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Img, {\n      className: \"\",\n      src: item.image,\n      alt: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(P, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, item.name));\n  }))), /*#__PURE__*/React.createElement(WrapperButton, {\n    className: \"wrapper-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-prev\",\n    onClick: () => handleClickPrev(),\n    disabled: offset <= 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Prev\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-next\",\n    onClick: () => handleClickNext(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"Next\")));\n};\n\n_s(PokemonListPage, \"Sbf9Y0mIOJyZtwGECceKPmFMpoM=\", false, function () {\n  return [useHistory];\n});\n\n_c = PokemonListPage;\nexport default PokemonListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonListPage\");","map":{"version":3,"sources":["/Users/hendra/Development/pokemon-catch/src/components/PokemonListPage/index.jsx"],"names":["React","useContext","useEffect","useState","useHistory","PokemonContext","gqlQuery","gqlQueryAbilites","REDUCERCONSTANT","Button","ContainerCards","Img","Li","P","Ul","WrapperButton","POPULATE_POKEMON","PokemonListPage","history","dispatch","offset","setOffset","limit","result","setResult","pokemonName","pokemonDetails","setPokemonDetails","Fetching","fetch","credentials","headers","body","JSON","stringify","query","variables","method","then","res","json","data","pokemons","FetchingPokemonDetails","pokemon","handleClickPokemon","item","type","image","name","handleClickPrev","prev","handleClickNext","results","map","key"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-vars */\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { PokemonContext } from \"../../contexts/PokemonContext\";\nimport { gqlQuery, gqlQueryAbilites } from \"../PokemonQuerying\";\n\nimport { REDUCERCONSTANT } from \"../../Constant/constantReducer\";\n\nimport { Button } from \"../../styles/button\";\nimport { ContainerCards, Img, Li, P, Ul, WrapperButton } from \"./style\";\n\nconst { POPULATE_POKEMON } = REDUCERCONSTANT;\n\nconst PokemonListPage = () => {\n  let history = useHistory();\n  const { dispatch } = useContext(PokemonContext);\n\n  const [offset, setOffset] = useState(1);\n  const [limit] = useState(20);\n  const [result, setResult] = useState();\n\n  const [pokemonName] = useState(\"ditto\");\n  const [pokemonDetails, setPokemonDetails] = useState();\n\n  const Fetching = () => {\n    fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: gqlQuery,\n        variables: {\n          limit,\n          offset,\n        },\n      }),\n      method: \"POST\",\n    })\n      .then((res) => res.json())\n      .then((res) => setResult(res?.data?.pokemons));\n  };\n\n  const FetchingPokemonDetails = () => {\n    fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: gqlQueryAbilites,\n        variables: {\n          pokemonName,\n        },\n      }),\n      method: \"POST\",\n    })\n      .then((res) => res.json())\n      .then((res) => setPokemonDetails(res?.data?.pokemon));\n  };\n\n  useEffect(() => {\n    Fetching();\n\n    return () => {};\n  }, [offset]);\n\n  useEffect(() => {\n    FetchingPokemonDetails();\n\n    return () => {};\n  }, [pokemonName]);\n\n  const handleClickPokemon = (item) => {\n    // extract pokemon name, iamge, and detail then send it to context\n    dispatch({\n      type: POPULATE_POKEMON,\n      pokemon: {\n        image: item.image,\n        name: item.name,\n        data: pokemonDetails,\n      },\n    });\n  };\n\n  const handleClickPrev = () => {\n    setOffset((prev) => prev - 20);\n  };\n\n  const handleClickNext = () => {\n    setOffset((prev) => prev + 20);\n  };\n\n  return (\n    <ContainerCards className=\"container-cards\">\n      <Ul className=\"list-cards\">\n        {result &&\n          result?.results?.map((item, key) => {\n            return (\n              <Li\n                // get pokemon information more details, show modal\n                onClick={() => handleClickPokemon(item)}\n                key={key}\n                className={`pokemon-cards`}\n              >\n                <Img className=\"\" src={item.image} alt=\"img\" />\n                <P>{item.name}</P>\n              </Li>\n            );\n          })}\n      </Ul>\n\n      <WrapperButton className=\"wrapper-buttons\">\n        <Button\n          className=\"btn-prev\"\n          onClick={() => handleClickPrev()}\n          disabled={offset <= 1}\n        >\n          Prev\n        </Button>\n\n        <Button className=\"btn-next\" onClick={() => handleClickNext()}>\n          Next\n        </Button>\n      </WrapperButton>\n    </ContainerCards>\n  );\n};\n\nexport default PokemonListPage;\n"]},"metadata":{},"sourceType":"module"}
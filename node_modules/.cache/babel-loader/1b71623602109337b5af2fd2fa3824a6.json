{"ast":null,"code":"var _jsxFileName = \"/Users/hendra/Development/pokemon-catch/src/components/PokemonListPage/index.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useReducer, useState } from \"react\";\nimport { gqlQuery, gqlQueryAbilites } from \"../PokemonQuerying\";\nimport PokemonDetailsPage from \"../PokemonDetailsPage\";\nimport { Button } from \"../../styles/button\";\nimport { ContainerCards, Img, Li, LoadingText, P, Title, Ul, WrapperButton, WrapperLoadingScreen } from \"./style\";\nimport listReducer from \"../../reducers/listReducer\";\nconst initialState = {\n  pokemonName: \"ditto\",\n  pokemonImg: \"\",\n  pokemonDetails: \"\",\n  detail: false,\n  isLoading: false\n};\n\nconst PokemonListPage = () => {\n  _s();\n\n  var _result$results;\n\n  const [offset, setOffset] = useState(1);\n  const [limit] = useState(20);\n  const [result, setResult] = useState();\n  const [pokemonName, setPokemonName] = useState(\"ditto\");\n  const [pokemonImg, setPokemonImg] = useState();\n  const [pokemonDetails, setPokemonDetails] = useState();\n  const [openModal, setOpenModal] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [state, dispatch] = useReducer(listReducer, initialState);\n\n  const Fetching = () => {\n    fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: gqlQuery,\n        variables: {\n          limit,\n          offset\n        }\n      }),\n      method: \"POST\"\n    }).then(res => res.json()).then(res => {\n      var _res$data;\n\n      return setResult(res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.pokemons);\n    });\n  };\n\n  const FetchingPokemonDetails = () => {\n    fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: gqlQueryAbilites,\n        variables: {\n          pokemonName\n        }\n      }),\n      method: \"POST\"\n    }).then(res => res.json()).then(res => {\n      var _res$data2;\n\n      return setPokemonDetails(res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.pokemon);\n    });\n  };\n\n  useEffect(() => {\n    Fetching();\n    return () => {};\n  }, [offset]);\n  useEffect(() => {\n    FetchingPokemonDetails();\n    return () => {};\n  }, [pokemonName]);\n  useEffect(() => {\n    pokemonDetails && console.log(\"68\", pokemonDetails);\n    return () => {};\n  }, [pokemonDetails]);\n\n  const handleClickPokemon = item => {\n    // extract pokemon name, and image\n    setPokemonImg(item.image);\n    setPokemonName(item.name);\n\n    if (pokemonDetails) {\n      setIsLoading(true);\n      setIsLoading(false);\n      setOpenModal(prev => !prev);\n    }\n  };\n\n  const handleClickPrev = () => {\n    setOffset(prev => prev - 20);\n  };\n\n  const handleClickNext = () => {\n    setOffset(prev => prev + 20);\n  };\n\n  return /*#__PURE__*/React.createElement(ContainerCards, {\n    className: \"container-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, !openModal && !isLoading && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"List of pokemons\")), /*#__PURE__*/React.createElement(Ul, {\n    className: \"list-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, result && (result === null || result === void 0 ? void 0 : (_result$results = result.results) === null || _result$results === void 0 ? void 0 : _result$results.map((item, key) => {\n    return /*#__PURE__*/React.createElement(Li // get pokemon information more details, show modal\n    , {\n      onClick: () => handleClickPokemon(item),\n      key: key,\n      className: `pokemon-cards`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Img, {\n      className: \"\",\n      src: item.image,\n      alt: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(P, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, item.name));\n  }))), /*#__PURE__*/React.createElement(WrapperButton, {\n    className: \"wrapper-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-prev\",\n    onClick: () => handleClickPrev(),\n    disabled: offset <= 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, \"Prev\")), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-next\",\n    onClick: () => handleClickNext(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, \"Next\")))), isLoading && /*#__PURE__*/React.createElement(WrapperLoadingScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoadingText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, \"Loading...\")), openModal && /*#__PURE__*/React.createElement(PokemonDetailsPage, {\n    data: pokemonDetails,\n    img: pokemonImg,\n    modal: setOpenModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }));\n};\n\n_s(PokemonListPage, \"QohaShunAKd+fk2inugwhuj7qtQ=\");\n\n_c = PokemonListPage;\nexport default PokemonListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonListPage\");","map":{"version":3,"sources":["/Users/hendra/Development/pokemon-catch/src/components/PokemonListPage/index.jsx"],"names":["React","useEffect","useReducer","useState","gqlQuery","gqlQueryAbilites","PokemonDetailsPage","Button","ContainerCards","Img","Li","LoadingText","P","Title","Ul","WrapperButton","WrapperLoadingScreen","listReducer","initialState","pokemonName","pokemonImg","pokemonDetails","detail","isLoading","PokemonListPage","offset","setOffset","limit","result","setResult","setPokemonName","setPokemonImg","setPokemonDetails","openModal","setOpenModal","setIsLoading","state","dispatch","Fetching","fetch","credentials","headers","body","JSON","stringify","query","variables","method","then","res","json","data","pokemons","FetchingPokemonDetails","pokemon","console","log","handleClickPokemon","item","image","name","prev","handleClickPrev","handleClickNext","results","map","key"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useReducer, useState } from \"react\";\nimport { gqlQuery, gqlQueryAbilites } from \"../PokemonQuerying\";\n\nimport PokemonDetailsPage from \"../PokemonDetailsPage\";\n\nimport { Button } from \"../../styles/button\";\nimport {\n  ContainerCards,\n  Img,\n  Li,\n  LoadingText,\n  P,\n  Title,\n  Ul,\n  WrapperButton,\n  WrapperLoadingScreen,\n} from \"./style\";\n\nimport listReducer from \"../../reducers/listReducer\";\n\nconst initialState = {\n  pokemonName: \"ditto\",\n  pokemonImg: \"\",\n  pokemonDetails: \"\",\n  detail: false,\n  isLoading: false,\n};\n\nconst PokemonListPage = () => {\n  const [offset, setOffset] = useState(1);\n  const [limit] = useState(20);\n  const [result, setResult] = useState();\n\n  const [pokemonName, setPokemonName] = useState(\"ditto\");\n  const [pokemonImg, setPokemonImg] = useState();\n  const [pokemonDetails, setPokemonDetails] = useState();\n  const [openModal, setOpenModal] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [state, dispatch] = useReducer(listReducer, initialState);\n\n  const Fetching = () => {\n    fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: gqlQuery,\n        variables: {\n          limit,\n          offset,\n        },\n      }),\n      method: \"POST\",\n    })\n      .then((res) => res.json())\n      .then((res) => setResult(res?.data?.pokemons));\n  };\n\n  const FetchingPokemonDetails = () => {\n    fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: gqlQueryAbilites,\n        variables: {\n          pokemonName,\n        },\n      }),\n      method: \"POST\",\n    })\n      .then((res) => res.json())\n      .then((res) => setPokemonDetails(res?.data?.pokemon));\n  };\n\n  useEffect(() => {\n    Fetching();\n    return () => {};\n  }, [offset]);\n\n  useEffect(() => {\n    FetchingPokemonDetails();\n    return () => {};\n  }, [pokemonName]);\n\n  useEffect(() => {\n    pokemonDetails && console.log(\"68\", pokemonDetails);\n    return () => {};\n  }, [pokemonDetails]);\n\n  const handleClickPokemon = (item) => {\n    // extract pokemon name, and image\n    setPokemonImg(item.image);\n    setPokemonName(item.name);\n\n    if (pokemonDetails) {\n      setIsLoading(true);\n      setIsLoading(false);\n      setOpenModal((prev) => !prev);\n    }\n  };\n\n  const handleClickPrev = () => {\n    setOffset((prev) => prev - 20);\n  };\n\n  const handleClickNext = () => {\n    setOffset((prev) => prev + 20);\n  };\n\n  return (\n    <ContainerCards className=\"container-cards\">\n      {!openModal && !isLoading && (\n        <>\n          <div className=\"wrapper-title\">\n            <Title className=\"title\">List of pokemons</Title>\n          </div>\n          <Ul className=\"list-cards\">\n            {result &&\n              result?.results?.map((item, key) => {\n                return (\n                  <Li\n                    // get pokemon information more details, show modal\n                    onClick={() => handleClickPokemon(item)}\n                    key={key}\n                    className={`pokemon-cards`}\n                  >\n                    <Img className=\"\" src={item.image} alt=\"img\" />\n                    <P>{item.name}</P>\n                  </Li>\n                );\n              })}\n          </Ul>\n\n          <WrapperButton className=\"wrapper-buttons\">\n            <Button\n              className=\"btn-prev\"\n              onClick={() => handleClickPrev()}\n              disabled={offset <= 1}\n            >\n              <span>Prev</span>\n            </Button>\n\n            <Button className=\"btn-next\" onClick={() => handleClickNext()}>\n              <span>Next</span>\n            </Button>\n          </WrapperButton>\n        </>\n      )}\n\n      {isLoading && (\n        <WrapperLoadingScreen>\n          <LoadingText>Loading...</LoadingText>\n        </WrapperLoadingScreen>\n      )}\n\n      {openModal && (\n        <PokemonDetailsPage\n          data={pokemonDetails}\n          img={pokemonImg}\n          modal={setOpenModal}\n        />\n      )}\n    </ContainerCards>\n  );\n};\n\nexport default PokemonListPage;\n"]},"metadata":{},"sourceType":"module"}
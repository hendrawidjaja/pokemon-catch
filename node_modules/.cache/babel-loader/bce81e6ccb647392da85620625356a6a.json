{"ast":null,"code":"import React, { useReducer } from \"react\";\n\nfunction init(initialOffset) {\n  return {\n    offset: initialOffset\n  };\n}\n\nconst pokemonsListReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOWER_OFFSET\":\n      {\n        return console.log(\"4\", action, state);\n      }\n\n    case \"RAISE_OFFSET\":\n      {\n        return console.log(\"8\", action, state);\n      }\n\n    case \"LIMIT\":\n      {\n        return console.log(\"12\", action, state);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default pokemonsListReducer;\n/*\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"increment\":\n      return { count: state.count + 1 };\n    case \"decrement\":\n      return { count: state.count - 1 };\n    case \"reset\":\n      return init(action.payload);\n    default:\n      throw new Error();\n  }\n}\n\nfunction Counter({ initialCount }) {\n  const [state, dispatch] = useReducer(reducer, initialCount, init);\n  return (\n    <>\n      Count: {state.count}\n      <button\n        onClick={() => dispatch({ type: \"reset\", payload: initialCount })}\n      >\n        {\" \"}\n        Reset\n      </button>\n      <button onClick={() => dispatch({ type: \"decrement\" })}>-</button>\n      <button onClick={() => dispatch({ type: \"increment\" })}>+</button>\n    </>\n  );\n}\n */","map":{"version":3,"sources":["/Users/hendra/Development/pokemon-catch/src/reducers/pokemonsListReducer.jsx"],"names":["React","useReducer","init","initialOffset","offset","pokemonsListReducer","state","action","type","console","log"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,SAASC,IAAT,CAAcC,aAAd,EAA6B;AAC3B,SAAO;AAAEC,IAAAA,MAAM,EAAED;AAAV,GAAP;AACD;;AAED,MAAME,mBAAmB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AAAqB;AACnB,eAAOC,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBH,MAAjB,EAAyBD,KAAzB,CAAP;AACD;;AAED,SAAK,cAAL;AAAqB;AACnB,eAAOG,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBH,MAAjB,EAAyBD,KAAzB,CAAP;AACD;;AAED,SAAK,OAAL;AAAc;AACZ,eAAOG,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBH,MAAlB,EAA0BD,KAA1B,CAAP;AACD;;AAED;AACE,aAAOA,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeD,mBAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useReducer } from \"react\";\n\nfunction init(initialOffset) {\n  return { offset: initialOffset };\n}\n\nconst pokemonsListReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOWER_OFFSET\": {\n      return console.log(\"4\", action, state);\n    }\n\n    case \"RAISE_OFFSET\": {\n      return console.log(\"8\", action, state);\n    }\n\n    case \"LIMIT\": {\n      return console.log(\"12\", action, state);\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default pokemonsListReducer;\n/*\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"increment\":\n      return { count: state.count + 1 };\n    case \"decrement\":\n      return { count: state.count - 1 };\n    case \"reset\":\n      return init(action.payload);\n    default:\n      throw new Error();\n  }\n}\n\nfunction Counter({ initialCount }) {\n  const [state, dispatch] = useReducer(reducer, initialCount, init);\n  return (\n    <>\n      Count: {state.count}\n      <button\n        onClick={() => dispatch({ type: \"reset\", payload: initialCount })}\n      >\n        {\" \"}\n        Reset\n      </button>\n      <button onClick={() => dispatch({ type: \"decrement\" })}>-</button>\n      <button onClick={() => dispatch({ type: \"increment\" })}>+</button>\n    </>\n  );\n}\n */\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export const LISTACTION = {\n  CLOSE: \"CLOSE\",\n  FETCH_DONE: \"FETCH DONE\",\n  FETCH_POKEMON: \"FETCH POKEMON\",\n  RAISE_OFFSET: \"RAISE OFFSET\",\n  REDUCE_OFFSET: \"REDUCE OFFSET\"\n};\n/*\nconst initialState = {\n  image: \"\",\n  isLoading: false,\n  limit: 20\n  offset: 1\n  pokemonDetails: \"\",\n  pokemonName: \"ditto\",\n  showDetail: false,\n};\n */\n\nconst listReducer = (state, action) => {\n  const limit = state.limit;\n  const offset = state.offset;\n\n  const Fetching = () => {\n    fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: gqlQuery,\n        variables: {\n          limit,\n          offset\n        }\n      }),\n      method: \"POST\"\n    }).then(res => res.json()).then(res => {\n      var _res$data;\n\n      return setResult(res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.pokemons);\n    });\n  };\n\n  switch (action.type) {\n    case LISTACTION.CLOSE:\n      {\n        return { ...state,\n          showDetail: false\n        };\n      }\n\n    case LISTACTION.FETCH_DONE:\n      {\n        return { ...state,\n          isLoading: false,\n          showDetail: true\n        };\n      }\n\n    case LISTACTION.FETCH_POKEMON:\n      {\n        return { ...state,\n          isLoading: true,\n          image: action.payload.image,\n          name: action.payload.name\n        };\n      }\n\n    case LISTACTION.RAISE_OFFSET:\n      {\n        return { ...state,\n          offset: state.offset += 20\n        };\n      }\n\n    case LISTACTION.REDUCE_OFFSET:\n      {\n        return { ...state,\n          offset: state.offset <= 1 ? state.offset : state.offset -= 20\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;","map":{"version":3,"sources":["/Users/hendra/Development/pokemon-catch/src/reducers/listReducer.jsx"],"names":["LISTACTION","CLOSE","FETCH_DONE","FETCH_POKEMON","RAISE_OFFSET","REDUCE_OFFSET","listReducer","state","action","limit","offset","Fetching","fetch","credentials","headers","body","JSON","stringify","query","gqlQuery","variables","method","then","res","json","setResult","data","pokemons","type","showDetail","isLoading","image","payload","name"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG;AACxBC,EAAAA,KAAK,EAAE,OADiB;AAExBC,EAAAA,UAAU,EAAE,YAFY;AAGxBC,EAAAA,aAAa,EAAE,eAHS;AAIxBC,EAAAA,YAAY,EAAE,cAJU;AAKxBC,EAAAA,aAAa,EAAE;AALS,CAAnB;AAQP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAMC,KAAK,GAAGF,KAAK,CAACE,KAApB;AACA,QAAMC,MAAM,GAAGH,KAAK,CAACG,MAArB;;AAEA,QAAMC,QAAQ,GAAG,MAAM;AACrBC,IAAAA,KAAK,CAAC,uCAAD,EAA0C;AAC7CC,MAAAA,WAAW,EAAE,MADgC;AAE7CC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFoC;AAG7CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,KAAK,EAAEC,QADY;AAEnBC,QAAAA,SAAS,EAAE;AACTX,UAAAA,KADS;AAETC,UAAAA;AAFS;AAFQ,OAAf,CAHuC;AAU7CW,MAAAA,MAAM,EAAE;AAVqC,KAA1C,CAAL,CAYGC,IAZH,CAYSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAZjB,EAaGF,IAbH,CAaSC,GAAD;AAAA;;AAAA,aAASE,SAAS,CAACF,GAAD,aAACA,GAAD,oCAACA,GAAG,CAAEG,IAAN,8CAAC,UAAWC,QAAZ,CAAlB;AAAA,KAbR;AAcD,GAfD;;AAiBA,UAAQnB,MAAM,CAACoB,IAAf;AACE,SAAK5B,UAAU,CAACC,KAAhB;AAAuB;AACrB,eAAO,EACL,GAAGM,KADE;AAELsB,UAAAA,UAAU,EAAE;AAFP,SAAP;AAID;;AAED,SAAK7B,UAAU,CAACE,UAAhB;AAA4B;AAC1B,eAAO,EACL,GAAGK,KADE;AAELuB,UAAAA,SAAS,EAAE,KAFN;AAGLD,UAAAA,UAAU,EAAE;AAHP,SAAP;AAKD;;AAED,SAAK7B,UAAU,CAACG,aAAhB;AAA+B;AAC7B,eAAO,EACL,GAAGI,KADE;AAELuB,UAAAA,SAAS,EAAE,IAFN;AAGLC,UAAAA,KAAK,EAAEvB,MAAM,CAACwB,OAAP,CAAeD,KAHjB;AAILE,UAAAA,IAAI,EAAEzB,MAAM,CAACwB,OAAP,CAAeC;AAJhB,SAAP;AAMD;;AAED,SAAKjC,UAAU,CAACI,YAAhB;AAA8B;AAC5B,eAAO,EACL,GAAGG,KADE;AAELG,UAAAA,MAAM,EAAGH,KAAK,CAACG,MAAN,IAAgB;AAFpB,SAAP;AAID;;AAED,SAAKV,UAAU,CAACK,aAAhB;AAA+B;AAC7B,eAAO,EACL,GAAGE,KADE;AAELG,UAAAA,MAAM,EAAEH,KAAK,CAACG,MAAN,IAAgB,CAAhB,GAAoBH,KAAK,CAACG,MAA1B,GAAoCH,KAAK,CAACG,MAAN,IAAgB;AAFvD,SAAP;AAID;;AAED;AACE,aAAOH,KAAP;AAxCJ;AA0CD,CA/DD;;AAiEA,eAAeD,WAAf","sourcesContent":["export const LISTACTION = {\n  CLOSE: \"CLOSE\",\n  FETCH_DONE: \"FETCH DONE\",\n  FETCH_POKEMON: \"FETCH POKEMON\",\n  RAISE_OFFSET: \"RAISE OFFSET\",\n  REDUCE_OFFSET: \"REDUCE OFFSET\",\n};\n\n/*\nconst initialState = {\n  image: \"\",\n  isLoading: false,\n  limit: 20\n  offset: 1\n  pokemonDetails: \"\",\n  pokemonName: \"ditto\",\n  showDetail: false,\n};\n */\n\nconst listReducer = (state, action) => {\n  const limit = state.limit;\n  const offset = state.offset;\n\n  const Fetching = () => {\n    fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: gqlQuery,\n        variables: {\n          limit,\n          offset,\n        },\n      }),\n      method: \"POST\",\n    })\n      .then((res) => res.json())\n      .then((res) => setResult(res?.data?.pokemons));\n  };\n\n  switch (action.type) {\n    case LISTACTION.CLOSE: {\n      return {\n        ...state,\n        showDetail: false,\n      };\n    }\n\n    case LISTACTION.FETCH_DONE: {\n      return {\n        ...state,\n        isLoading: false,\n        showDetail: true,\n      };\n    }\n\n    case LISTACTION.FETCH_POKEMON: {\n      return {\n        ...state,\n        isLoading: true,\n        image: action.payload.image,\n        name: action.payload.name,\n      };\n    }\n\n    case LISTACTION.RAISE_OFFSET: {\n      return {\n        ...state,\n        offset: (state.offset += 20),\n      };\n    }\n\n    case LISTACTION.REDUCE_OFFSET: {\n      return {\n        ...state,\n        offset: state.offset <= 1 ? state.offset : (state.offset -= 20),\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;\n"]},"metadata":{},"sourceType":"module"}
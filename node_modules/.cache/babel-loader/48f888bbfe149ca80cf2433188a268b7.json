{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\n\n/* eslint-disable no-unused-vars */\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { PokemonContext } from \"../../contexts/PokemonContext\";\nimport { css } from \"@emotion/css\";\nimport { GFONT } from \"../../styles/globalStyle\";\nconst gqlQuery = `query pokemons($limit: Int, $offset: Int) {\n  pokemons(limit: $limit, offset: $offset) {\n    count\n    next\n    previous\n    status\n    message\n    results {\n      url\n      name\n      image\n    }\n  }\n}`;\nconst gqlVariables = {\n  limit: 2,\n  offset: 1\n};\n\nconst PokemonListPage = () => {\n  _s();\n\n  const [result, setResult] = useState();\n  const {\n    pokemons\n  } = useContext(PokemonContext);\n\n  const Fetching = async () => {\n    const res = await fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: gqlQuery,\n        variables: gqlVariables\n      }),\n      method: \"POST\"\n    });\n    const result = await res.json(); //return console.log(\"Response from server\", result);\n\n    return result;\n  };\n\n  useEffect(() => {\n    Fetching();\n    return () => {};\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n};\n\n_s(PokemonListPage, \"3aqWGuE+1cj2rKIFUVQGoQhp4uk=\");\n\n_c = PokemonListPage;\nexport default PokemonListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonListPage\");","map":{"version":3,"sources":["/Users/hendra/Development/pokemon-catch/src/components/list/index.jsx"],"names":["React","useContext","useEffect","useState","PokemonContext","css","GFONT","gqlQuery","gqlVariables","limit","offset","PokemonListPage","result","setResult","pokemons","Fetching","res","fetch","credentials","headers","body","JSON","stringify","query","variables","method","json"],"mappings":";;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,cAAT,QAA+B,+BAA/B;AAEA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,KAAT,QAAsB,0BAAtB;AAEA,MAAMC,QAAQ,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAbA;AAeA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CADY;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;;AAKA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,EAApC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAeb,UAAU,CAACG,cAAD,CAA/B;;AAEA,QAAMW,QAAQ,GAAG,YAAY;AAC3B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,uCAAD,EAA0C;AAC/DC,MAAAA,WAAW,EAAE,MADkD;AAE/DC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFsD;AAG/DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,KAAK,EAAEhB,QADY;AAEnBiB,QAAAA,SAAS,EAAEhB;AAFQ,OAAf,CAHyD;AAO/DiB,MAAAA,MAAM,EAAE;AAPuD,KAA1C,CAAvB;AASA,UAAMb,MAAM,GAAG,MAAMI,GAAG,CAACU,IAAJ,EAArB,CAV2B,CAW3B;;AACA,WAAOd,MAAP;AACD,GAbD;;AAeAV,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ;AACR,WAAO,MAAM,CAAE,CAAf;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBAAO,yCAAP;AACD,CAzBD;;GAAMJ,e;;KAAAA,e;AA2BN,eAAeA,eAAf","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-vars */\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { PokemonContext } from \"../../contexts/PokemonContext\";\n\nimport { css } from \"@emotion/css\";\nimport { GFONT } from \"../../styles/globalStyle\";\n\nconst gqlQuery = `query pokemons($limit: Int, $offset: Int) {\n  pokemons(limit: $limit, offset: $offset) {\n    count\n    next\n    previous\n    status\n    message\n    results {\n      url\n      name\n      image\n    }\n  }\n}`;\n\nconst gqlVariables = {\n  limit: 2,\n  offset: 1,\n};\n\nconst PokemonListPage = () => {\n  const [result, setResult] = useState();\n  const { pokemons } = useContext(PokemonContext);\n\n  const Fetching = async () => {\n    const res = await fetch(\"https://graphql-pokeapi.graphcdn.app/\", {\n      credentials: \"omit\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: gqlQuery,\n        variables: gqlVariables,\n      }),\n      method: \"POST\",\n    });\n    const result = await res.json();\n    //return console.log(\"Response from server\", result);\n    return result;\n  };\n\n  useEffect(() => {\n    Fetching();\n    return () => {};\n  }, []);\n\n  return <></>;\n};\n\nexport default PokemonListPage;\n"]},"metadata":{},"sourceType":"module"}
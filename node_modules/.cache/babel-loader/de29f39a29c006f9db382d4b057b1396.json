{"ast":null,"code":"var _jsxFileName = \"/Users/hendra/Development/pokemon-catch/src/components/pokemon-modal/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { css } from \"@emotion/css\";\nimport { ButtonClose, ContainerModal, Li, Modal, Name, Ul } from \"./style\";\n\nconst PokemonModal = ({\n  data,\n  img,\n  modal\n}) => {\n  _s();\n\n  useEffect(() => {\n    data.types.map((type, key) => console.log(type.type.name));\n    return () => {};\n  }, [data]);\n  return /*#__PURE__*/React.createElement(ContainerModal, {\n    className: \"container-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonClose, {\n    className: \"btn-close\",\n    onClick: () => modal(prev => !prev),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"\\u2715\"), /*#__PURE__*/React.createElement(Name, {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, data.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: `dflex content ${css`\n            position: relative;\n            flex-direction: column;\n          `}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `wrapper-img ${css`\n              position: relative;\n              margin-left: auto;\n              margin-right: auto;\n            `}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"pokemon-img\",\n    src: img,\n    alt: \"pokemon-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  })), data && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper-information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Abilities:\", /*#__PURE__*/React.createElement(Ul, {\n    className: \"information-abilities\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, data.abilities.map((ability, key) => /*#__PURE__*/React.createElement(Li, {\n    key: key,\n    className: \"ability\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }\n  }, ability.ability.name))), \"Moves:\", /*#__PURE__*/React.createElement(Ul, {\n    className: \"information-moves\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, data.moves.map((move, key) => /*#__PURE__*/React.createElement(Li, {\n    key: key,\n    className: \"move\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }, move.move.name))), /*#__PURE__*/React.createElement(Ul, {\n    className: \"information-types\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"Types:\", data.types.map((type, key) => /*#__PURE__*/React.createElement(Li, {\n    key: key,\n    className: \"type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }, type.type.name)))))));\n};\n\n_s(PokemonModal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PokemonModal;\nexport default PokemonModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonModal\");","map":{"version":3,"sources":["/Users/hendra/Development/pokemon-catch/src/components/pokemon-modal/index.jsx"],"names":["React","useEffect","css","ButtonClose","ContainerModal","Li","Modal","Name","Ul","PokemonModal","data","img","modal","types","map","type","key","console","log","name","prev","abilities","ability","moves","move"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { css } from \"@emotion/css\";\nimport { ButtonClose, ContainerModal, Li, Modal, Name, Ul } from \"./style\";\n\nconst PokemonModal = ({ data, img, modal }) => {\n  useEffect(() => {\n    data.types.map((type, key) => console.log(type.type.name));\n    return () => {};\n  }, [data]);\n  return (\n    <ContainerModal className=\"container-modal\">\n      <Modal className=\"modal\">\n        <ButtonClose\n          className=\"btn-close\"\n          onClick={() => modal((prev) => !prev)}\n        >\n          âœ•\n        </ButtonClose>\n\n        <Name className=\"name\">{data.name}</Name>\n\n        <div\n          className={`dflex content ${css`\n            position: relative;\n            flex-direction: column;\n          `}`}\n        >\n          <div\n            className={`wrapper-img ${css`\n              position: relative;\n              margin-left: auto;\n              margin-right: auto;\n            `}`}\n          >\n            <img className=\"pokemon-img\" src={img} alt=\"pokemon-img\" />\n          </div>\n\n          {data && (\n            <div className=\"wrapper-information\">\n              Abilities:\n              <Ul className=\"information-abilities\">\n                {data.abilities.map((ability, key) => (\n                  <Li key={key} className=\"ability\">\n                    {ability.ability.name}\n                  </Li>\n                ))}\n              </Ul>\n              Moves:\n              <Ul className=\"information-moves\">\n                {data.moves.map((move, key) => (\n                  <Li key={key} className=\"move\">\n                    {move.move.name}\n                  </Li>\n                ))}\n              </Ul>\n              <Ul className=\"information-types\">\n                Types:\n                {data.types.map((type, key) => (\n                  <Li key={key} className=\"type\">\n                    {type.type.name}\n                  </Li>\n                ))}\n              </Ul>\n            </div>\n          )}\n        </div>\n      </Modal>\n    </ContainerModal>\n  );\n};\n\nexport default PokemonModal;\n"]},"metadata":{},"sourceType":"module"}